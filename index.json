{"repository_name":"wasmer","body":"<div align=\"center\">\n  <a href=\"https://wasmer.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n    <img width=\"300\" src=\"https://raw.githubusercontent.com/wasmerio/wasmer/master/assets/logo.png\" alt=\"Wasmer logo\">\n  </a>\n  \n  <h1>Wasmer Crystal</h1>\n  \n  <p>\n    <a href=\"https://github.com/naqvis/wasmer-crystal/actions/workflows/ci.yml\">\n      <img src=\"https://github.com/naqvis/wasmer-crystal/actions/workflows/ci.yml/badge.svg\" alt=\"Build Status\">\n    </a>\n    <a href=\"https://github.com/naqvis/wasmer-crystal/blob/main/LICENSE\">\n      <img src=\"https://img.shields.io/github/license/naqvis/wasmer-crystal.svg\" alt=\"License\">\n    </a>\n    <a href=\"https://naqvis.github.io/wasmer-crystal/index.html\">\n      <img src=\"https://img.shields.io/badge/documentation-API-f06\" alt=\"API Documentation\">\n    </a> \n  </p>\n\n  <h3>\n    <a href=\"https://wasmer.io/\">Wasmer Website</a>\n    <span> • </span>\n    <a href=\"https://naqvis.github.io/wasmer-crystal/index.html\">Shard Docs</a>\n    <span> • </span>\n    <a href=\"https://slack.wasmer.io/\">Wasmer Slack Channel</a>\n  </h3>\n</div>\n\n<hr/>\n\nA complete and mature WebAssembly runtime for Crystal based on\n[Wasmer](https://github.com/wasmerio/wasmer).\n\n**Features**\n\n  * **Easy to use**: The `wasmer` API mimics the standard WebAssembly API,\n  * **Fast**: `wasmer` executes the WebAssembly modules as fast as\n    possible, close to **native speed**,\n  * **Safe**: All calls to WebAssembly will be fast, but more\n    importantly, completely safe and sandboxed.\n\n**Documentation**: [browse the detailed API\ndocumentation]( https://naqvis.github.io/wasmer-crystal/)\n\n\n**Examples** as tutorials: [browser the `examples/`\ndirectory](https://github.com/naqvis/wasmer-crystal/tree/main/examples),\nit's the best place for a complete introduction!\n\n<br/>\n\n> **_NOTE:_** \nShard assumes you have [wasmer](https://github.com/wasmerio/wasmer) runtime installed and environment variable **`WASMER_DIR`** is setup properly, or you will encounter issues during compilation.\n\n<br/>\n\n\n# Quick Introduction\n\nThe `wasmer` package brings the required API to execute WebAssembly\nmodules. In a nutshell, `wasmer` compiles the WebAssembly module into\ncompiled code, and then executes it. `wasmer` is designed to work in\nvarious environments and platforms. To achieve this, Wasmer (the\noriginal runtime) provides multiple engines and multiple\ncompilers.\n\nSuccinctly, an _engine_ is responsible to drive the _compilation_ (by\nusing a _compiler_) and the _execution_ of a WebAssembly\nmodule. Wasmer comes with many engines and compilers.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies\n     wasmer:\n       github: naqvis/wasmer-crystal\n   ```\n\n2. Run `shards install`\n\nAnd you're ready to get fun!\n\n## Usage\n\n```crystal\nrequire \"wasmer\"\n```\n\n## Example\n\nWe highly recommend to read the\n[`examples/`](https://github.com/naqvis/wasmer-crystal/tree/main/examples)\ndirectory, which contains a sequence of examples/tutorials. It's the\nbest place to learn by reading examples.\n\nBut for the most eager of you, and we know you're numerous you\nmischievous, there is a quick toy program in\n`examples/appendices/simple.rs`, written in Rust:\n\n```rust\n#[no_mangle]\npub extern fn sum(x: i32, y: i32) -> i32 {\n    x + y\n}\n```\n\nAfter compilation to WebAssembly, the\n[`examples/appendices/simple.wasm`](https://github.com/naqvis/wasmer-crystal/tree/main/examples/appendices/simple.wasm)\nbinary file is generated.\n\nThen, we can execute it in Crystal:\n\n```crystal\nrequire \"wasmer\"\n\n# Let's define the engine, that holds the compiler.\nengine = Wasmer::Engine.new \n\n# Let's define the store, that holds the engine, that holds the compiler.\nstore = Wasmer::Store.new(engine)\n\n# Above two lines are same as invoking below helper method\n# store = Wasmer.default_engine.new_store\n\n# Let's compile the module to be able to execute it!\nmodule_ = Wasmer::Module.new store, File.read(\"#{__DIR__}/simple.wasm\")\n\n# Now the module is compiled, we can instantiate it.\ninstance = Wasmer::Instance.new module_\n\n# get the exported `sum` function\n# function methods returns nil if it can't find the requested function. we know its there, so let's add `not_nil!` \nsum = instance.function(\"sum\").not_nil!\n\n# Call the exported `sum` function with Crystal standard values. The WebAssembly\n# types are inferred and values are casted automatically.\nresult = sum.call(5, 37)\n\nputs result # => 42\n```\n\nAnd then, finally, enjoy by running:\n\n```sh\n$ crystal examples/appendices/simple.cr\n```\n\n## Development\nTo run all tests\n\n`crystal spec`\n\n## What is WebAssembly?\n\nQuoting [the WebAssembly site](https://webassembly.org/):\n\n> WebAssembly (abbreviated Wasm) is a binary instruction format for a\n> stack-based virtual machine. Wasm is designed as a portable target\n> for compilation of high-level languages like C/C++/Rust, enabling\n> deployment on the web for client and server applications.\n\nAbout speed:\n\n> WebAssembly aims to execute at native speed by taking advantage of\n> [common hardware\n> capabilities](https://webassembly.org/docs/portability/#assumptions-for-efficient-execution)\n> available on a wide range of platforms.\n\nAbout safety:\n\n> WebAssembly describes a memory-safe, sandboxed [execution\n> environment](https://webassembly.org/docs/semantics/#linear-memory) […].\n\n## License\n\nThe entire project is under the MIT License. Please read [the `LICENSE` file][license].\n\n## Contributing\n\n1. Fork it (<https://github.com/naqvis/wasmer-crystal/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Ali Naqvi](https://github.com/naqvis) - creator and maintainer\n\n[license]: https://github.com/naqvis/wasmer-crystal/blob/main/LICENSE","program":{"html_id":"wasmer/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"wasmer","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"wasmer/Wasmer","path":"Wasmer.html","kind":"module","full_name":"Wasmer","name":"Wasmer","abstract":false,"locations":[{"filename":"src/wasmer.cr","line_number":2,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer.cr#L2"},{"filename":"src/wasmer/config.cr","line_number":3,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L3"},{"filename":"src/wasmer/engine.cr","line_number":4,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L4"},{"filename":"src/wasmer/exports.cr","line_number":6,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L6"},{"filename":"src/wasmer/extern.cr","line_number":3,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L3"},{"filename":"src/wasmer/function.cr","line_number":9,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L9"},{"filename":"src/wasmer/global.cr","line_number":5,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L5"},{"filename":"src/wasmer/import.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L7"},{"filename":"src/wasmer/instance.cr","line_number":6,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/instance.cr#L6"},{"filename":"src/wasmer/lib.cr","line_number":1,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/lib.cr#L1"},{"filename":"src/wasmer/limits.cr","line_number":3,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/limits.cr#L3"},{"filename":"src/wasmer/memory.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L7"},{"filename":"src/wasmer/module.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L7"},{"filename":"src/wasmer/pages.cr","line_number":3,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/pages.cr#L3"},{"filename":"src/wasmer/store.cr","line_number":4,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/store.cr#L4"},{"filename":"src/wasmer/table.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L7"},{"filename":"src/wasmer/target.cr","line_number":3,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L3"},{"filename":"src/wasmer/trap.cr","line_number":4,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L4"},{"filename":"src/wasmer/value.cr","line_number":3,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L3"},{"filename":"src/wasmer/wat.cr","line_number":4,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wat.cr#L4"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"F32","name":"F32","value":"ValueKind::F32"},{"id":"F64","name":"F64","value":"ValueKind::F64"},{"id":"I32","name":"I32","value":"ValueKind::I32","doc":"handy constants to `ValueKind` so one can use `Wasmer::I32` instead of `Wasmer::ValueKind::I32`","summary":"<p>handy constants to <code><a href=\"Wasmer/ValueKind.html\">ValueKind</a></code> so one can use <code><a href=\"Wasmer.html#I32\">Wasmer::I32</a></code> instead of <code><a href=\"Wasmer/ValueKind.html#I32\">Wasmer::ValueKind::I32</a></code></p>"},{"id":"I64","name":"I64","value":"ValueKind::I64"},{"id":"Immutable","name":"Immutable","value":"GlobalMutability::Immutable"},{"id":"Mutable","name":"Mutable","value":"GlobalMutability::Mutable"},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version \\\"/Users/runner/work/wasmer-crystal/wasmer-crystal/src\\\"`).chomp.stringify.downcase }}"}],"doc":"A complete and mature WebAssembly runtime for Crystal based on [Wasmer](https://wasmer.io/).","summary":"<p>A complete and mature WebAssembly runtime for Crystal based on <a href=\"https://wasmer.io/\">Wasmer</a>.</p>","class_methods":[{"html_id":"c_to_valuelist(values:LibWasmer::WasmValVecT):Array(Value)-class-method","name":"c_to_valuelist","abstract":false,"args":[{"name":"values","external_name":"values","restriction":"LibWasmer::WasmValVecT"}],"args_string":"(values : LibWasmer::WasmValVecT) : Array(Value)","args_html":"(values : LibWasmer::WasmValVecT) : Array(<a href=\"Wasmer/Value.html\">Value</a>)","location":{"filename":"src/wasmer/value.cr","line_number":213,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L213"},"def":{"name":"c_to_valuelist","args":[{"name":"values","external_name":"values","restriction":"LibWasmer::WasmValVecT"}],"return_type":"Array(Value)","visibility":"Public","body":"res = Array(Value).new(values.size)\nptr = values.data\n0.upto(values.size.to_i - 1) do |i|\n  res << (Value.new(ptr[i]))\nend\nres\n"}},{"html_id":"default_engine-class-method","name":"default_engine","doc":"Instantiates and returns a new default engine","summary":"<p>Instantiates and returns a new default engine</p>","abstract":false,"location":{"filename":"src/wasmer/engine.cr","line_number":50,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L50"},"def":{"name":"default_engine","visibility":"Public","body":"Engine.new"}},{"html_id":"dylib_engine-class-method","name":"dylib_engine","doc":"Instantiates and returns a new Dylib engine","summary":"<p>Instantiates and returns a new Dylib engine</p>","abstract":false,"location":{"filename":"src/wasmer/engine.cr","line_number":60,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L60"},"def":{"name":"dylib_engine","visibility":"Public","body":"Engine.dylib"}},{"html_id":"engine(config:Config)-class-method","name":"engine","doc":"Instantiates and returns a new Engine with default configuration","summary":"<p>Instantiates and returns a new Engine with default configuration</p>","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"}],"args_string":"(config : Config)","args_html":"(config : <a href=\"Wasmer/Config.html\">Config</a>)","location":{"filename":"src/wasmer/engine.cr","line_number":65,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L65"},"def":{"name":"engine","args":[{"name":"config","external_name":"config","restriction":"Config"}],"visibility":"Public","body":"Engine.new(config)"}},{"html_id":"max_unbound-class-method","name":"max_unbound","doc":"Returns the value used to represent an unbound limit.\ni.e. when a limit only has a min but not a max.\nSee `Limits`","summary":"<p>Returns the value used to represent an unbound limit.</p>","abstract":false,"location":{"filename":"src/wasmer/limits.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/limits.cr#L7"},"def":{"name":"max_unbound","visibility":"Public","body":"LibWasmer::WASM_LIMITS_MAX_DEFAULT"}},{"html_id":"module(store:Store,wat:String|Bytes)-class-method","name":"module","doc":"Helper method to return an instance of `Module`","summary":"<p>Helper method to return an instance of <code><a href=\"Wasmer/Module.html\">Module</a></code></p>","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"wat","external_name":"wat","restriction":"String | Bytes"}],"args_string":"(store : Store, wat : String | Bytes)","args_html":"(store : <a href=\"Wasmer/Store.html\">Store</a>, wat : String | Bytes)","location":{"filename":"src/wasmer/module.cr","line_number":101,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L101"},"def":{"name":"module","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"wat","external_name":"wat","restriction":"String | Bytes"}],"visibility":"Public","body":"Module.new(store, wat)"}},{"html_id":"new_instance(mod:Module,imports:ImportObject=ImportObject.new)-class-method","name":"new_instance","abstract":false,"args":[{"name":"mod","external_name":"mod","restriction":"Module"},{"name":"imports","default_value":"ImportObject.new","external_name":"imports","restriction":"ImportObject"}],"args_string":"(mod : Module, imports : ImportObject = ImportObject.new)","args_html":"(mod : <a href=\"Wasmer/Module.html\">Module</a>, imports : <a href=\"Wasmer/ImportObject.html\">ImportObject</a> = <span class=\"t\">ImportObject</span>.new)","location":{"filename":"src/wasmer/instance.cr","line_number":49,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/instance.cr#L49"},"def":{"name":"new_instance","args":[{"name":"mod","external_name":"mod","restriction":"Module"},{"name":"imports","default_value":"ImportObject.new","external_name":"imports","restriction":"ImportObject"}],"visibility":"Public","body":"Instance.new(mod, imports)"}},{"html_id":"universal_engine-class-method","name":"universal_engine","doc":"Instantiates and returns a new Universal engine","summary":"<p>Instantiates and returns a new Universal engine</p>","abstract":false,"location":{"filename":"src/wasmer/engine.cr","line_number":55,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L55"},"def":{"name":"universal_engine","visibility":"Public","body":"Engine.universal"}},{"html_id":"value_types(kinds:Array(ValueKind)):Array(ValueType)-class-method","name":"value_types","abstract":false,"args":[{"name":"kinds","external_name":"kinds","restriction":"Array(ValueKind)"}],"args_string":"(kinds : Array(ValueKind)) : Array(ValueType)","args_html":"(kinds : Array(<a href=\"Wasmer/ValueKind.html\">ValueKind</a>)) : Array(<a href=\"Wasmer/ValueType.html\">ValueType</a>)","location":{"filename":"src/wasmer/value.cr","line_number":171,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L171"},"def":{"name":"value_types","args":[{"name":"kinds","external_name":"kinds","restriction":"Array(ValueKind)"}],"return_type":"Array(ValueType)","visibility":"Public","body":"ret = Array(ValueType).new(kinds.size)\nkinds.each do |k|\n  ret << (ValueType.new(k))\nend\nret\n"}},{"html_id":"value_types:Array(ValueType)-class-method","name":"value_types","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":177,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L177"},"def":{"name":"value_types","return_type":"Array(ValueType)","visibility":"Public","body":"value_types([] of ValueKind)"}},{"html_id":"value_types(*kinds:ValueKind):Array(ValueType)-class-method","name":"value_types","doc":"Instantiates a new ValueType array from a list of ValueKind.\nHelper function specifically designed to help you declare function types","summary":"<p>Instantiates a new ValueType array from a list of ValueKind.</p>","abstract":false,"args":[{"name":"kinds","external_name":"kinds","restriction":"ValueKind"}],"args_string":"(*kinds : ValueKind) : Array(ValueType)","args_html":"(*kinds : <a href=\"Wasmer/ValueKind.html\">ValueKind</a>) : Array(<a href=\"Wasmer/ValueType.html\">ValueType</a>)","location":{"filename":"src/wasmer/value.cr","line_number":167,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L167"},"def":{"name":"value_types","args":[{"name":"kinds","external_name":"kinds","restriction":"ValueKind"}],"splat_index":0,"return_type":"Array(ValueType)","visibility":"Public","body":"value_types(kinds.to_a)"}},{"html_id":"version-class-method","name":"version","abstract":false,"location":{"filename":"src/wasmer.cr","line_number":16,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer.cr#L16"},"def":{"name":"version","visibility":"Public","body":"String.new(Wasmer::LibWasmer.wasmer_version)"}},{"html_id":"wat2wasm(wat:String):Bytes-class-method","name":"wat2wasm","doc":"wat2wasm parses a string as either WAT or a binary Wasm module\nSee https://webassembly.github.io/spec/core/text/index.html\nNote: This is not part of the standard Wasm C API. It is Wasmer specific","summary":"<p>wat2wasm parses a string as either WAT or a binary Wasm module See https://webassembly.github.io/spec/core/text/index.html Note: This is not part of the standard Wasm C API.</p>","abstract":false,"args":[{"name":"wat","external_name":"wat","restriction":"String"}],"args_string":"(wat : String) : Bytes","args_html":"(wat : String) : Bytes","location":{"filename":"src/wasmer/wat.cr","line_number":8,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wat.cr#L8"},"def":{"name":"wat2wasm","args":[{"name":"wat","external_name":"wat","restriction":"String"}],"return_type":"Bytes","visibility":"Public","body":"LibWasmer.wasm_byte_vec_new(out wat_bytes, wat.bytesize, wat)\nLibWasmer.wat2wasm(pointerof(wat_bytes), out wasm)\nif wasm.data.null?\n  check_error\nend\nv = Bytes.new(wasm.data, wasm.size)\nLibWasmer.wasm_byte_vec_delete(pointerof(wat_bytes))\nv\n"}}],"types":[{"html_id":"wasmer/Wasmer/CompilerKind","path":"Wasmer/CompilerKind.html","kind":"enum","full_name":"Wasmer::CompilerKind","name":"CompilerKind","abstract":false,"ancestors":[{"html_id":"wasmer/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"wasmer/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"wasmer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/config.cr","line_number":5,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L5"}],"repository_name":"wasmer","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Cranelift","name":"Cranelift","value":"0"},{"id":"LLVM","name":"LLVM","value":"1"},{"id":"Singlepass","name":"Singlepass","value":"2"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Represents possible compiler types","summary":"<p>Represents possible compiler types</p>","instance_methods":[{"html_id":"available?-instance-method","name":"available?","doc":"Checks that the given compiler is available in this current version of wasmer-crystal","summary":"<p>Checks that the given compiler is available in this current version of wasmer-crystal</p>","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":11,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L11"},"def":{"name":"available?","visibility":"Public","body":"LibWasmer.wasmer_is_compiler_available(to_c)"}},{"html_id":"cranelift?-instance-method","name":"cranelift?","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":6,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L6"},"def":{"name":"cranelift?","visibility":"Public","body":"self == Cranelift"}},{"html_id":"llvm?-instance-method","name":"llvm?","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L7"},"def":{"name":"llvm?","visibility":"Public","body":"self == LLVM"}},{"html_id":"singlepass?-instance-method","name":"singlepass?","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":8,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L8"},"def":{"name":"singlepass?","visibility":"Public","body":"self == Singlepass"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a `String` representation of this enum member to the given *io*.\n\nSee also: `to_s`.","summary":"<p>Appends a <code>String</code> representation of this enum member to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/wasmer/config.cr","line_number":15,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L15"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << self.to_s.downcase"}}]},{"html_id":"wasmer/Wasmer/Config","path":"Wasmer/Config.html","kind":"class","full_name":"Wasmer::Config","name":"Config","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/config.cr","line_number":46,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L46"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":47,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L47"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"use_cranelift_compiler-instance-method","name":"use_cranelift_compiler","doc":"Sets the compiler to Cranelift. Will raise if `Cranelift` compiler is not\nsupported by current binding.\nCheck `CompilerKind.available?` to check the availability","summary":"<p>Sets the compiler to Cranelift.</p>","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":75,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L75"},"def":{"name":"use_cranelift_compiler","visibility":"Public","body":"set_compiler(CompilerKind::Cranelift)"}},{"html_id":"use_dylib_engine-instance-method","name":"use_dylib_engine","doc":"Sets the engine to Dylib. Will raise if `Dylib` engine is not\nsupported by current binding.\nCheck `EngineKind.available?` to check the availability","summary":"<p>Sets the engine to Dylib.</p>","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":61,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L61"},"def":{"name":"use_dylib_engine","visibility":"Public","body":"set_engine(EngineKind::Dylib)"}},{"html_id":"use_llvm_compiler-instance-method","name":"use_llvm_compiler","doc":"Sets the compiler to LLVM. Will raise if `llvm` compiler is not\nsupported by current binding.\nCheck `CompilerKind.available?` to check the availability","summary":"<p>Sets the compiler to LLVM.</p>","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":82,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L82"},"def":{"name":"use_llvm_compiler","visibility":"Public","body":"set_compiler(CompilerKind::LLVM)"}},{"html_id":"use_singlepass_compiler-instance-method","name":"use_singlepass_compiler","doc":"Sets the compiler to Singlepass. Will raise if `Singlepass` compiler is not\nsupported by current binding.\nCheck `CompilerKind.available?` to check the availability","summary":"<p>Sets the compiler to Singlepass.</p>","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":89,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L89"},"def":{"name":"use_singlepass_compiler","visibility":"Public","body":"set_compiler(CompilerKind::Singlepass)"}},{"html_id":"use_staticlib_engine-instance-method","name":"use_staticlib_engine","doc":"Sets the engine to Staticlib. Will raise if `Staticlib` engine is not\nsupported by current binding.\nCheck `EngineKind.available?` to check the availability","summary":"<p>Sets the engine to Staticlib.</p>","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":68,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L68"},"def":{"name":"use_staticlib_engine","visibility":"Public","body":"set_engine(EngineKind::Staticlib)"}},{"html_id":"use_target(target:Target)-instance-method","name":"use_target","doc":"Use a specific target for doing cross-compilation","summary":"<p>Use a specific target for doing cross-compilation</p>","abstract":false,"args":[{"name":"target","external_name":"target","restriction":"Target"}],"args_string":"(target : Target)","args_html":"(target : <a href=\"../Wasmer/Target.html\">Target</a>)","location":{"filename":"src/wasmer/config.cr","line_number":94,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L94"},"def":{"name":"use_target","args":[{"name":"target","external_name":"target","restriction":"Target"}],"visibility":"Public","body":"LibWasmer.wasm_config_set_target(self, target)\nself\n"}},{"html_id":"use_universal_engine-instance-method","name":"use_universal_engine","doc":"Sets the engine to Universal. Will raise if `Universal` engine is not\nsupported by current binding.\nCheck `EngineKind.available?` to check the availability","summary":"<p>Sets the engine to Universal.</p>","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":54,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L54"},"def":{"name":"use_universal_engine","visibility":"Public","body":"set_engine(EngineKind::Universal)"}}]},{"html_id":"wasmer/Wasmer/CpuFeatures","path":"Wasmer/CpuFeatures.html","kind":"class","full_name":"Wasmer::CpuFeatures","name":"CpuFeatures","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/target.cr","line_number":87,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L87"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"CpuFeatures holds a set of CPU features. They are identified by\ntheir stringified names. The reference is the GCC options:\n* https:gcc.gnu.org/onlinedocs/gcc/x86-Options.html,\n* https:gcc.gnu.org/onlinedocs/gcc/ARM-Options.html,\n* https:gcc.gnu.org/onlinedocs/gcc/AArch64-Options.html.\nAt the time of writing this documentation (it might be outdated in\nthe future), the supported featurse are the following:\n* sse2,\n* sse3,\n* ssse3,\n* sse4.1,\n* sse4.2,\n* popcnt,\n* avx,\n* bmi,\n* bmi2,\n* avx2,\n* avx512dq,\n* avx512vl,\n* lzcnt.","summary":"<p>CpuFeatures holds a set of CPU features.</p>","constructors":[{"html_id":"new-class-method","name":"new","doc":"Create a new CputFeatures, which is a set of CPU features.","summary":"<p>Create a new CputFeatures, which is a set of CPU features.</p>","abstract":false,"location":{"filename":"src/wasmer/target.cr","line_number":89,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L89"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"add(feature:String)-instance-method","name":"add","doc":"Add a new CPU feature to the existing set","summary":"<p>Add a new CPU feature to the existing set</p>","abstract":false,"args":[{"name":"feature","external_name":"feature","restriction":"String"}],"args_string":"(feature : String)","args_html":"(feature : String)","location":{"filename":"src/wasmer/target.cr","line_number":94,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L94"},"def":{"name":"add","args":[{"name":"feature","external_name":"feature","restriction":"String"}],"visibility":"Public","body":"name_ptr = Name.new(feature)\nbegin\n  ret = LibWasmer.wasmer_cpu_features_add(self, name_ptr)\n  if ret\n  else\n    Wasmer.check_error\n  end\nensure\n  LibWasmer.wasm_byte_vec_delete(name_ptr)\nend\n"}}]},{"html_id":"wasmer/Wasmer/Engine","path":"Wasmer/Engine.html","kind":"class","full_name":"Wasmer::Engine","name":"Engine","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/engine.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L7"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Engine is used by the `Store` to drive the compilation and the\nexecution of a WebAssembly module","summary":"<p>Engine is used by the <code><a href=\"../Wasmer/Store.html\">Store</a></code> to drive the compilation and the execution of a WebAssembly module</p>","class_methods":[{"html_id":"dylib-class-method","name":"dylib","doc":"Instantiates and returns a new Dylib engine","summary":"<p>Instantiates and returns a new Dylib engine</p>","abstract":false,"location":{"filename":"src/wasmer/engine.cr","line_number":26,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L26"},"def":{"name":"dylib","visibility":"Public","body":"config = Config.new\nconfig.use_dylib_engine\nnew(config)\n"}},{"html_id":"universal-class-method","name":"universal","doc":"Instantiates and returns a new Universal engine","summary":"<p>Instantiates and returns a new Universal engine</p>","abstract":false,"location":{"filename":"src/wasmer/engine.cr","line_number":19,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L19"},"def":{"name":"universal","visibility":"Public","body":"config = Config.new\nconfig.use_universal_engine\nnew(config)\n"}}],"constructors":[{"html_id":"new(config:Config)-class-method","name":"new","doc":"Instantiates and returns a new Engine with given configuration","summary":"<p>Instantiates and returns a new Engine with given configuration</p>","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"}],"args_string":"(config : Config)","args_html":"(config : <a href=\"../Wasmer/Config.html\">Config</a>)","location":{"filename":"src/wasmer/engine.cr","line_number":14,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L14"},"def":{"name":"new","args":[{"name":"config","external_name":"config","restriction":"Config"}],"visibility":"Public","body":"_ = allocate\n_.initialize(config)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","doc":"Instantiates and returns a new Engine with default configuration","summary":"<p>Instantiates and returns a new Engine with default configuration</p>","abstract":false,"location":{"filename":"src/wasmer/engine.cr","line_number":9,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L9"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"new_store-instance-method","name":"new_store","doc":"helper method to returns a new `Store` object","summary":"<p>helper method to returns a new <code><a href=\"../Wasmer/Store.html\">Store</a></code> object</p>","abstract":false,"location":{"filename":"src/wasmer/engine.cr","line_number":33,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/engine.cr#L33"},"def":{"name":"new_store","visibility":"Public","body":"Store.new(self)"}}]},{"html_id":"wasmer/Wasmer/EngineKind","path":"Wasmer/EngineKind.html","kind":"enum","full_name":"Wasmer::EngineKind","name":"EngineKind","abstract":false,"ancestors":[{"html_id":"wasmer/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"wasmer/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"wasmer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/config.cr","line_number":26,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L26"}],"repository_name":"wasmer","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Universal","name":"Universal","value":"0"},{"id":"Dylib","name":"Dylib","value":"1"},{"id":"Staticlib","name":"Staticlib","value":"2"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Represents the possible engine types","summary":"<p>Represents the possible engine types</p>","instance_methods":[{"html_id":"available?-instance-method","name":"available?","doc":"Checks that the given engine is available in this current version of wasmer-crystal","summary":"<p>Checks that the given engine is available in this current version of wasmer-crystal</p>","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":32,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L32"},"def":{"name":"available?","visibility":"Public","body":"LibWasmer.wasmer_is_engine_available(to_c)"}},{"html_id":"dylib?-instance-method","name":"dylib?","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":28,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L28"},"def":{"name":"dylib?","visibility":"Public","body":"self == Dylib"}},{"html_id":"staticlib?-instance-method","name":"staticlib?","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":29,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L29"},"def":{"name":"staticlib?","visibility":"Public","body":"self == Staticlib"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a `String` representation of this enum member to the given *io*.\n\nSee also: `to_s`.","summary":"<p>Appends a <code>String</code> representation of this enum member to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/wasmer/config.cr","line_number":36,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L36"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << self.to_s.downcase"}},{"html_id":"universal?-instance-method","name":"universal?","abstract":false,"location":{"filename":"src/wasmer/config.cr","line_number":27,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/config.cr#L27"},"def":{"name":"universal?","visibility":"Public","body":"self == Universal"}}]},{"html_id":"wasmer/Wasmer/Exports","path":"Wasmer/Exports.html","kind":"class","full_name":"Wasmer::Exports","name":"Exports","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/exports.cr","line_number":12,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L12"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Represents all the exports of an instance.\n\nExports can be of kind `Function`, `Global`, `Table`, or `Memory`.\nExports is a special kind of map that allows easily unwrapping the\ntypes of instances.","summary":"<p>Represents all the exports of an instance.</p>","instance_methods":[{"html_id":"[](name:String):Extern-instance-method","name":"[]","doc":"Retries and returns an `Extern` by its name.\nIf the name does not refer to an existing export, it will raise an exception","summary":"<p>Retries and returns an <code><a href=\"../Wasmer/Extern.html\">Extern</a></code> by its name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Extern","args_html":"(name : String) : <a href=\"../Wasmer/Extern.html\">Extern</a>","location":{"filename":"src/wasmer/exports.cr","line_number":29,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L29"},"def":{"name":"[]","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Extern","visibility":"Public","body":"exp = @exports[name]?\nif exp\nelse\n  raise(WasmerError.new(\"Export '#{name}' does not exist\"))\nend\nexp\n"}},{"html_id":"function(name:String)-instance-method","name":"function","doc":"Retrieves an exported function by its name and return it as a native Crystal Proc\nThe difference with `raw_function` is that `Function#native` has been called on the\nexported function.\n\nNote: If the name does not refer to an existing export, `function` raises exception.\nNote: If the export is not a function, `function` will return nil as its result","summary":"<p>Retrieves an exported function by its name and return it as a native Crystal Proc The difference with <code><a href=\"../Wasmer/Exports.html#raw_function%28name%3AString%29%3AFunction%3F-instance-method\">#raw_function</a></code> is that <code><a href=\"../Wasmer/Function.html#native%3ANative-instance-method\">Function#native</a></code> has been called on the exported function.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/wasmer/exports.cr","line_number":49,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L49"},"def":{"name":"function","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"func = raw_function(name)\nfunc.try(&.native)\n"}},{"html_id":"global(name:String):Global?-instance-method","name":"global","doc":"Retrieves and return an exported Global by its name.\nIf the name doesn't not refer to an existing export, it will raise an exception.\nif the export is not a global, it will return nil as its result","summary":"<p>Retrieves and return an exported Global by its name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Global?","args_html":"(name : String) : <a href=\"../Wasmer/Global.html\">Global</a>?","location":{"filename":"src/wasmer/exports.cr","line_number":57,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L57"},"def":{"name":"global","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Global | ::Nil","visibility":"Public","body":"exp = self[name]\nexp.to_global\n"}},{"html_id":"memory(name:String):Memory?-instance-method","name":"memory","doc":"Retrieves and return an exported Memory by its name.\nIf the name doesn't not refer to an existing export, it will raise an exception.\nif the export is not a memory, it will return nil as its result","summary":"<p>Retrieves and return an exported Memory by its name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Memory?","args_html":"(name : String) : <a href=\"../Wasmer/Memory.html\">Memory</a>?","location":{"filename":"src/wasmer/exports.cr","line_number":73,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L73"},"def":{"name":"memory","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Memory | ::Nil","visibility":"Public","body":"exp = self[name]\nexp.to_memory\n"}},{"html_id":"raw_function(name:String):Function?-instance-method","name":"raw_function","doc":"Retrieves and return an exported function by its name.\nIf the name doesn't not refer to an existing export, it will raise an exception.\nif the export is not a function, it will return nil as its result","summary":"<p>Retrieves and return an exported function by its name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Function?","args_html":"(name : String) : <a href=\"../Wasmer/Function.html\">Function</a>?","location":{"filename":"src/wasmer/exports.cr","line_number":38,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L38"},"def":{"name":"raw_function","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Function | ::Nil","visibility":"Public","body":"exp = self[name]\nexp.to_function\n"}},{"html_id":"table(name:String):Table?-instance-method","name":"table","doc":"Retrieves and return an exported Table by its name.\nIf the name doesn't not refer to an existing export, it will raise an exception.\nif the export is not a table, it will return nil as its result","summary":"<p>Retrieves and return an exported Table by its name.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Table?","args_html":"(name : String) : <a href=\"../Wasmer/Table.html\">Table</a>?","location":{"filename":"src/wasmer/exports.cr","line_number":65,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L65"},"def":{"name":"table","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Table | ::Nil","visibility":"Public","body":"exp = self[name]\nexp.to_table\n"}},{"html_id":"wasi_start_func-instance-method","name":"wasi_start_func","doc":"Similar to function(\"_start\"). It saves you the cost of knowing\nthe name of the WASI start function.","summary":"<p>Similar to function(&quot;_start&quot;).</p>","abstract":false,"location":{"filename":"src/wasmer/exports.cr","line_number":80,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L80"},"def":{"name":"wasi_start_func","visibility":"Public","body":"if start = LibWasmer.wasi_get_start_function(@instance)\n  return (Function.new(start, nil)).native\nend\nraise(WasmerError.new(\"WASI start function was not found\"))\n"}}]},{"html_id":"wasmer/Wasmer/ExportType","path":"Wasmer/ExportType.html","kind":"class","full_name":"Wasmer::ExportType","name":"ExportType","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/exports.cr","line_number":101,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L101"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"ExportType is a descriptor for an exported WebAssembly value","summary":"<p>ExportType is a descriptor for an exported WebAssembly value</p>","constructors":[{"html_id":"new(name:String,type:WithExternType)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"type","external_name":"type","restriction":"WithExternType"}],"args_string":"(name : String, type : WithExternType)","args_html":"(name : String, type : <a href=\"../Wasmer/WithExternType.html\">WithExternType</a>)","location":{"filename":"src/wasmer/exports.cr","line_number":104,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L104"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"type","external_name":"type","restriction":"WithExternType"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"name-instance-method","name":"name","abstract":false,"location":{"filename":"src/wasmer/exports.cr","line_number":116,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L116"},"def":{"name":"name","visibility":"Public","body":"val = (LibWasmer.wasm_exporttype_name(self)).value\n(String.new(val.data))[...val.size]\n"}},{"html_id":"type-instance-method","name":"type","abstract":false,"location":{"filename":"src/wasmer/exports.cr","line_number":121,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/exports.cr#L121"},"def":{"name":"type","visibility":"Public","body":"ExternType.new(LibWasmer.wasm_exporttype_type(self))"}}]},{"html_id":"wasmer/Wasmer/Extern","path":"Wasmer/Extern.html","kind":"class","full_name":"Wasmer::Extern","name":"Extern","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/extern.cr","line_number":76,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L76"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Extern is the runtime representation of an entity that can be\nimported or exported","summary":"<p>Extern is the runtime representation of an entity that can be imported or exported</p>","instance_methods":[{"html_id":"kind:ExternKind-instance-method","name":"kind","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":87,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L87"},"def":{"name":"kind","return_type":"ExternKind","visibility":"Public","body":"ExternKind.from_value(LibWasmer.wasm_extern_kind(self))"}},{"html_id":"to_extern:Extern-instance-method","name":"to_extern","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":83,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L83"},"def":{"name":"to_extern","return_type":"Extern","visibility":"Public","body":"self"}},{"html_id":"to_function:Function?-instance-method","name":"to_function","doc":"Converts the Extern into a `Function`\nIf the Extern is not a `Function`, this method returns nil","summary":"<p>Converts the Extern into a <code><a href=\"../Wasmer/Function.html\">Function</a></code> If the Extern is not a <code><a href=\"../Wasmer/Function.html\">Function</a></code>, this method returns nil</p>","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":97,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L97"},"def":{"name":"to_function","return_type":"Function | ::Nil","visibility":"Public","body":"ret = LibWasmer.wasm_extern_as_func(self)\nif ret\nelse\n  return nil\nend\nFunction.new(ret, nil)\n"}},{"html_id":"to_global:Global?-instance-method","name":"to_global","doc":"Converts the Extern into a `Global`\nIf the Extern is not a `Global`, this method returns nil","summary":"<p>Converts the Extern into a <code><a href=\"../Wasmer/Global.html\">Global</a></code> If the Extern is not a <code><a href=\"../Wasmer/Global.html\">Global</a></code>, this method returns nil</p>","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":105,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L105"},"def":{"name":"to_global","return_type":"Global | ::Nil","visibility":"Public","body":"ret = LibWasmer.wasm_extern_as_global(self)\nif ret\nelse\n  return nil\nend\nGlobal.new(ret)\n"}},{"html_id":"to_memory:Memory?-instance-method","name":"to_memory","doc":"Converts the Extern into a `Memory`\nIf the Extern is not a `Memory`, this method returns nil","summary":"<p>Converts the Extern into a <code><a href=\"../Wasmer/Memory.html\">Memory</a></code> If the Extern is not a <code><a href=\"../Wasmer/Memory.html\">Memory</a></code>, this method returns nil</p>","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":121,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L121"},"def":{"name":"to_memory","return_type":"Memory | ::Nil","visibility":"Public","body":"ret = LibWasmer.wasm_extern_as_memory(self)\nif ret\nelse\n  return nil\nend\nMemory.new(ret)\n"}},{"html_id":"to_table:Table?-instance-method","name":"to_table","doc":"Converts the Extern into a `Table`\nIf the Extern is not a `Table`, this method returns nil","summary":"<p>Converts the Extern into a <code><a href=\"../Wasmer/Table.html\">Table</a></code> If the Extern is not a <code><a href=\"../Wasmer/Table.html\">Table</a></code>, this method returns nil</p>","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":113,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L113"},"def":{"name":"to_table","return_type":"Table | ::Nil","visibility":"Public","body":"ret = LibWasmer.wasm_extern_as_table(self)\nif ret\nelse\n  return nil\nend\nTable.new(ret)\n"}},{"html_id":"type:ExternType-instance-method","name":"type","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":91,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L91"},"def":{"name":"type","return_type":"ExternType","visibility":"Public","body":"ExternType.new(LibWasmer.wasm_extern_type(self))"}}]},{"html_id":"wasmer/Wasmer/ExternKind","path":"Wasmer/ExternKind.html","kind":"enum","full_name":"Wasmer::ExternKind","name":"ExternKind","abstract":false,"ancestors":[{"html_id":"wasmer/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"wasmer/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"wasmer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/extern.cr","line_number":5,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L5"}],"repository_name":"wasmer","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Func","name":"Func","value":"0_u8"},{"id":"Global","name":"Global","value":"1_u8"},{"id":"Table","name":"Table","value":"2_u8"},{"id":"Memory","name":"Memory","value":"3_u8"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Represents the kind of an Extern","summary":"<p>Represents the kind of an Extern</p>","instance_methods":[{"html_id":"func?-instance-method","name":"func?","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":6,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L6"},"def":{"name":"func?","visibility":"Public","body":"self == Func"}},{"html_id":"global?-instance-method","name":"global?","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L7"},"def":{"name":"global?","visibility":"Public","body":"self == Global"}},{"html_id":"memory?-instance-method","name":"memory?","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":9,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L9"},"def":{"name":"memory?","visibility":"Public","body":"self == Memory"}},{"html_id":"table?-instance-method","name":"table?","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":8,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L8"},"def":{"name":"table?","visibility":"Public","body":"self == Table"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a `String` representation of this enum member to the given *io*.\n\nSee also: `to_s`.","summary":"<p>Appends a <code>String</code> representation of this enum member to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/wasmer/extern.cr","line_number":11,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L11"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << self.to_s.downcase"}}]},{"html_id":"wasmer/Wasmer/ExternType","path":"Wasmer/ExternType.html","kind":"class","full_name":"Wasmer::ExternType","name":"ExternType","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/extern.cr","line_number":23,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L23"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"ExternType classifies imports and external values with their respective types.\nSee also\nSpecification: https://webassembly.github.io/spec/core/syntax/types.html#external-types","summary":"<p>ExternType classifies imports and external values with their respective types.</p>","instance_methods":[{"html_id":"kind:ExternKind-instance-method","name":"kind","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":28,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L28"},"def":{"name":"kind","return_type":"ExternKind","visibility":"Public","body":"ExternKind.from_value(LibWasmer.wasm_externtype_kind(self))"}},{"html_id":"to_functiontype:FunctionType?-instance-method","name":"to_functiontype","doc":"Converts the ExterType into a `FunctionType`\nIf the ExternType is not a `FunctionType`, this method returns nil","summary":"<p>Converts the ExterType into a <code><a href=\"../Wasmer/FunctionType.html\">FunctionType</a></code> If the ExternType is not a <code><a href=\"../Wasmer/FunctionType.html\">FunctionType</a></code>, this method returns nil</p>","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":34,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L34"},"def":{"name":"to_functiontype","return_type":"FunctionType | ::Nil","visibility":"Public","body":"ret = LibWasmer.wasm_externtype_as_functype_const(self)\nif ret\nelse\n  return nil\nend\nFunctionType.new(ret)\n"}},{"html_id":"to_globaltype:GlobalType?-instance-method","name":"to_globaltype","doc":"Converts the ExterType into a `GlobalType`\nIf the ExternType is not a `GlobalType`, this method returns nil","summary":"<p>Converts the ExterType into a <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code> If the ExternType is not a <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code>, this method returns nil</p>","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":42,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L42"},"def":{"name":"to_globaltype","return_type":"GlobalType | ::Nil","visibility":"Public","body":"ret = LibWasmer.wasm_externtype_as_globaltype_const(self)\nif ret\nelse\n  return nil\nend\nGlobalType.new(ret)\n"}},{"html_id":"to_memorytype:MemoryType?-instance-method","name":"to_memorytype","doc":"Converts the ExterType into a `MemoryType`\nIf the ExternType is not a `MemoryType`, this method returns nil","summary":"<p>Converts the ExterType into a <code><a href=\"../Wasmer/MemoryType.html\">MemoryType</a></code> If the ExternType is not a <code><a href=\"../Wasmer/MemoryType.html\">MemoryType</a></code>, this method returns nil</p>","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":58,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L58"},"def":{"name":"to_memorytype","return_type":"MemoryType | ::Nil","visibility":"Public","body":"ret = LibWasmer.wasm_externtype_as_memorytype_const(self)\nif ret\nelse\n  return nil\nend\nMemoryType.new(ret)\n"}},{"html_id":"to_tabletype:TableType?-instance-method","name":"to_tabletype","doc":"Converts the ExterType into a `TableType`\nIf the ExternType is not a `TableType`, this method returns nil","summary":"<p>Converts the ExterType into a <code><a href=\"../Wasmer/TableType.html\">TableType</a></code> If the ExternType is not a <code><a href=\"../Wasmer/TableType.html\">TableType</a></code>, this method returns nil</p>","abstract":false,"location":{"filename":"src/wasmer/extern.cr","line_number":50,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L50"},"def":{"name":"to_tabletype","return_type":"TableType | ::Nil","visibility":"Public","body":"ret = LibWasmer.wasm_externtype_as_tabletype_const(self)\nif ret\nelse\n  return nil\nend\nTableType.new(ret)\n"}}]},{"html_id":"wasmer/Wasmer/Frame","path":"Wasmer/Frame.html","kind":"class","full_name":"Wasmer::Frame","name":"Frame","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/trap.cr","line_number":45,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L45"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Frame represents a frame of a WebAssembly stack trace.","summary":"<p>Frame represents a frame of a WebAssembly stack trace.</p>","instance_methods":[{"html_id":"function_index-instance-method","name":"function_index","doc":"Returns the function index in the original WebAssembly module that\nthis frame corresponds to","summary":"<p>Returns the function index in the original WebAssembly module that this frame corresponds to</p>","abstract":false,"location":{"filename":"src/wasmer/trap.cr","line_number":52,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L52"},"def":{"name":"function_index","visibility":"Public","body":"LibWasmer.wasm_frame_func_index(self)"}},{"html_id":"function_offset-instance-method","name":"function_offset","doc":"Returns the byte offset from the beginning of the\nfunction in the original WebAssembly file to the instruction this\nframe points to","summary":"<p>Returns the byte offset from the beginning of the function in the original WebAssembly file to the instruction this frame points to</p>","abstract":false,"location":{"filename":"src/wasmer/trap.cr","line_number":59,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L59"},"def":{"name":"function_offset","visibility":"Public","body":"LibWasmer.wasm_frame_func_offset(self)"}},{"html_id":"instance-instance-method","name":"instance","doc":"TODO: See https://github.com/wasmerio/wasmer/blob/6fbc903ea32774c830fd9ee86140d1406ac5d745/lib/c-api/src/wasm_c_api/types/frame.rs#L31-L34","summary":"<p><span class=\"flag orange\">TODO</span>  See https://github.com/wasmerio/wasmer/blob/6fbc903ea32774c830fd9ee86140d1406ac5d745/lib/c-api/src/wasm_c_api/types/frame.rs#L31-L34</p>","abstract":false,"location":{"filename":"src/wasmer/trap.cr","line_number":70,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L70"},"def":{"name":"instance","visibility":"Public","body":"raise(\"Not implemented by Wasmer\")"}},{"html_id":"module_offset-instance-method","name":"module_offset","doc":"Returns the byte offset from the beginning of the\noriginal WebAssembly file to the instruction this frame points to.","summary":"<p>Returns the byte offset from the beginning of the original WebAssembly file to the instruction this frame points to.</p>","abstract":false,"location":{"filename":"src/wasmer/trap.cr","line_number":65,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L65"},"def":{"name":"module_offset","visibility":"Public","body":"LibWasmer.wasm_frame_module_offset(self)"}}]},{"html_id":"wasmer/Wasmer/FuncEnvProc","path":"Wasmer/FuncEnvProc.html","kind":"alias","full_name":"Wasmer::FuncEnvProc","name":"FuncEnvProc","abstract":false,"locations":[{"filename":"src/wasmer/function.cr","line_number":67,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L67"}],"repository_name":"wasmer","program":false,"enum":false,"alias":true,"aliased":"Proc(Pointer(Void), Array(Wasmer::Value), Array(Wasmer::Value))","aliased_html":"Pointer(Void), Array(<a href=\"../Wasmer/Value.html\">Wasmer::Value</a>) -> Array(<a href=\"../Wasmer/Value.html\">Wasmer::Value</a>)","const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"}},{"html_id":"wasmer/Wasmer/FuncProc","path":"Wasmer/FuncProc.html","kind":"alias","full_name":"Wasmer::FuncProc","name":"FuncProc","abstract":false,"locations":[{"filename":"src/wasmer/function.cr","line_number":66,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L66"}],"repository_name":"wasmer","program":false,"enum":false,"alias":true,"aliased":"Proc(Array(Wasmer::Value), Array(Wasmer::Value))","aliased_html":"Array(<a href=\"../Wasmer/Value.html\">Wasmer::Value</a>) -> Array(<a href=\"../Wasmer/Value.html\">Wasmer::Value</a>)","const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"}},{"html_id":"wasmer/Wasmer/Function","path":"Wasmer/Function.html","kind":"class","full_name":"Wasmer::Function","name":"Function","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/function.cr","line_number":82,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L82"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Function is a WebAssembly function instance\n\nA function instance is the runtime representation of a function.\nIt effectively is a closure of the original function (defined in either\nthe host or the WebAssembly module) over the runtime `Instance` of its\noriginating `Module`.\n\nThe module instance is used to resolve references to other definitions\nduring execution of the function.\n\nSpec: <https://webassembly.github.io/spec/core/exec/runtime.html#function-instances>","summary":"<p>Function is a WebAssembly function instance</p>","constructors":[{"html_id":"new(store:Store,type:FunctionType,env:UserEnv,&func:FuncEnvProc)-class-method","name":"new","doc":"Instantiates a new `Function` in the given `Store`.\nIt takes four arguments, the `Store`, the `FunctionType`,\nhost environment and the definition for the Function.\nenvironment can be anything. It is `Pointer(Void)`\n\nThe function definition must be a native Crystal function with a `Value` array\nas its single argument. The function must return a `Value` array or\nraise an exception for abnormal conditions.\n\nNote: Even if the function does not take any argument (or use any argument)\nit must receive a `Value` array as its single argument. At runtime, this array will be empty.\nThe same applies to the result.","summary":"<p>Instantiates a new <code><a href=\"../Wasmer/Function.html\">Function</a></code> in the given <code><a href=\"../Wasmer/Store.html\">Store</a></code>.</p>","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"type","external_name":"type","restriction":"FunctionType"},{"name":"env","external_name":"env","restriction":"UserEnv"}],"args_string":"(store : Store, type : FunctionType, env : UserEnv, &func : FuncEnvProc)","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, type : <a href=\"../Wasmer/FunctionType.html\">FunctionType</a>, env : <a href=\"../Wasmer/UserEnv.html\">UserEnv</a>, &func : <a href=\"../Wasmer/FuncEnvProc.html\">FuncEnvProc</a>)","location":{"filename":"src/wasmer/function.cr","line_number":115,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L115"},"def":{"name":"new","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"type","external_name":"type","restriction":"FunctionType"},{"name":"env","external_name":"env","restriction":"UserEnv"}],"yields":0,"block_arg":{"name":"func","external_name":"func","restriction":"FuncEnvProc"},"visibility":"Public","body":"new(store, type, env, func)"}},{"html_id":"new(store:Store,type:FunctionType,&func:FuncProc)-class-method","name":"new","doc":"Instantiates a new `Function` in the given `Store`.\nIt takes three arguments, the `Store`, the `FunctionType` and the\ndefinition for the Function.\n\nThe function definition must be a native Crystal function with a `Value` array\nas its single argument. The function must return a `Value` array or\nraise an exception for abnormal conditions.\n\nNote: Even if the function does not take any argument (or use any argument)\nit must receive a `Value` array as its single argument. At runtime, this array will be empty.\nThe same applies to the result.","summary":"<p>Instantiates a new <code><a href=\"../Wasmer/Function.html\">Function</a></code> in the given <code><a href=\"../Wasmer/Store.html\">Store</a></code>.</p>","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"type","external_name":"type","restriction":"FunctionType"}],"args_string":"(store : Store, type : FunctionType, &func : FuncProc)","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, type : <a href=\"../Wasmer/FunctionType.html\">FunctionType</a>, &func : <a href=\"../Wasmer/FuncProc.html\">FuncProc</a>)","location":{"filename":"src/wasmer/function.cr","line_number":99,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L99"},"def":{"name":"new","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"type","external_name":"type","restriction":"FunctionType"}],"yields":0,"block_arg":{"name":"func","external_name":"func","restriction":"FuncProc"},"visibility":"Public","body":"new(store, type, UserEnv.null, func)"}}],"instance_methods":[{"html_id":"call(*params:Number)-instance-method","name":"call","doc":"call the Function and return its result as native Crystal values.","summary":"<p>call the Function and return its result as native Crystal values.</p>","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"Number"}],"args_string":"(*params : Number)","args_html":"(*params : Number)","location":{"filename":"src/wasmer/function.cr","line_number":151,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L151"},"def":{"name":"call","args":[{"name":"params","external_name":"params","restriction":"Number"}],"splat_index":0,"visibility":"Public","body":"self.native.call(*params)"}},{"html_id":"native:Native-instance-method","name":"native","doc":"turn the `Function` into a native Crystal function that can be called.","summary":"<p>turn the <code><a href=\"../Wasmer/Function.html\">Function</a></code> into a native Crystal function that can be called.</p>","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":156,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L156"},"def":{"name":"native","return_type":"Native","visibility":"Public","body":"@lazy_native || (@lazy_native = Native.new(self))"}},{"html_id":"param_arity:UInt32-instance-method","name":"param_arity","doc":"Returns the number of arguments the Function expects as per its definition","summary":"<p>Returns the number of arguments the Function expects as per its definition</p>","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":141,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L141"},"def":{"name":"param_arity","return_type":"UInt32","visibility":"Public","body":"(LibWasmer.wasm_func_param_arity(self)).to_u32"}},{"html_id":"result_arity:UInt32-instance-method","name":"result_arity","doc":"Returns the number of results the function will return","summary":"<p>Returns the number of results the function will return</p>","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":146,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L146"},"def":{"name":"result_arity","return_type":"UInt32","visibility":"Public","body":"(LibWasmer.wasm_func_result_arity(self)).to_u32"}},{"html_id":"to_extern:Extern-instance-method","name":"to_extern","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":130,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L130"},"def":{"name":"to_extern","return_type":"Extern","visibility":"Public","body":"p = LibWasmer.wasm_func_as_extern(self)\nExtern.new(p)\n"}},{"html_id":"type:FunctionType-instance-method","name":"type","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":135,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L135"},"def":{"name":"type","return_type":"FunctionType","visibility":"Public","body":"p = LibWasmer.wasm_func_type(self)\nFunctionType.new(p)\n"}}]},{"html_id":"wasmer/Wasmer/FunctionType","path":"Wasmer/FunctionType.html","kind":"class","full_name":"Wasmer::FunctionType","name":"FunctionType","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExternType","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/function.cr","line_number":17,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L17"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExternType","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"FunctionType classifies the signature of functions, mapping a\nvector of parameters to a vector of results. They are also used to\nclassify the inputs and outputs of instructions.\n\nSee also\n\nSpecification: https://webassembly.github.io/spec/core/syntax/types.html#function-types","summary":"<p>FunctionType classifies the signature of functions, mapping a vector of parameters to a vector of results.</p>","constructors":[{"html_id":"new(params:Array(ValueType),results:Array(ValueType))-class-method","name":"new","doc":"Instantiates a new FunctionType from two `ValueType` arrays: parameters and the results\n```\nparams = Wasmer.value_types\nresults = Wasmer.value_types(Wasmer::I32)\nfunction_type = Wasmer::FunctionType.new(params, results)\n```","summary":"<p>Instantiates a new FunctionType from two <code><a href=\"../Wasmer/ValueType.html\">ValueType</a></code> arrays: parameters and the results <code>params = <a href=\"../Wasmer.html#value_types%3AArray%28ValueType%29-class-method\">Wasmer.value_types</a> results = <a href=\"../Wasmer.html#value_types%28kinds%3AArray%28ValueKind%29%29%3AArray%28ValueType%29-class-method\">Wasmer.value_types(Wasmer::I32)</a> function_type = <a href=\"../Wasmer/FunctionType.html#new%28params%3AArray%28ValueType%29%2Cresults%3AArray%28ValueType%29%29-class-method\">Wasmer::FunctionType.new(params, results)</a></code></p>","abstract":false,"args":[{"name":"params","external_name":"params","restriction":"Array(ValueType)"},{"name":"results","external_name":"results","restriction":"Array(ValueType)"}],"args_string":"(params : Array(ValueType), results : Array(ValueType))","args_html":"(params : Array(<a href=\"../Wasmer/ValueType.html\">ValueType</a>), results : Array(<a href=\"../Wasmer/ValueType.html\">ValueType</a>))","location":{"filename":"src/wasmer/function.cr","line_number":26,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L26"},"def":{"name":"new","args":[{"name":"params","external_name":"params","restriction":"Array(ValueType)"},{"name":"results","external_name":"results","restriction":"Array(ValueType)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(params, results)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":34,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L34"},"def":{"name":"new","visibility":"Public","body":"no_p = [] of ValueType\nnew(no_p, no_p)\n"}}],"instance_methods":[{"html_id":"params:Array(ValueType)-instance-method","name":"params","doc":"Returns the parameters definitions from the FunctionType as\na `ValueType` array","summary":"<p>Returns the parameters definitions from the FunctionType as a <code><a href=\"../Wasmer/ValueType.html\">ValueType</a></code> array</p>","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":44,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L44"},"def":{"name":"params","return_type":"Array(ValueType)","visibility":"Public","body":"Wasmer.c_to_valuetypes((LibWasmer.wasm_functype_params(self)).value)"}},{"html_id":"results:Array(ValueType)-instance-method","name":"results","doc":"Returns the results definitions from the FunctionType as\na `ValueType` array","summary":"<p>Returns the results definitions from the FunctionType as a <code><a href=\"../Wasmer/ValueType.html\">ValueType</a></code> array</p>","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":50,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L50"},"def":{"name":"results","return_type":"Array(ValueType)","visibility":"Public","body":"Wasmer.c_to_valuetypes((LibWasmer.wasm_functype_results(self)).value)"}},{"html_id":"to_externtype:ExternType-instance-method","name":"to_externtype","abstract":false,"location":{"filename":"src/wasmer/function.cr","line_number":54,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L54"},"def":{"name":"to_externtype","return_type":"ExternType","visibility":"Public","body":"val = LibWasmer.wasm_functype_as_externtype_const(self)\nExternType.new(val)\n"}}]},{"html_id":"wasmer/Wasmer/Global","path":"Wasmer/Global.html","kind":"class","full_name":"Wasmer::Global","name":"Global","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/global.cr","line_number":106,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L106"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"`Global` stores a single value of the given `GlobalType`\nSee Also\nhttps://webassembly.github.io/spec/core/syntax/modules.html#globals","summary":"<p><code><a href=\"../Wasmer/Global.html\">Global</a></code> stores a single value of the given <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code> See Also https://webassembly.github.io/spec/core/syntax/modules.html#globals</p>","constructors":[{"html_id":"new(store:Store,type:GlobalType,value:Value)-class-method","name":"new","doc":"Instantiates a new `Global` in the given `Store`\nIt takes three arguments, the `Store`, the `GlobalType` and the `Value`\n\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::Immutable)\nglobal = Global.new(store, global_type, Value.new(42))\n```","summary":"<p>Instantiates a new <code><a href=\"../Wasmer/Global.html\">Global</a></code> in the given <code><a href=\"../Wasmer/Store.html\">Store</a></code> It takes three arguments, the <code><a href=\"../Wasmer/Store.html\">Store</a></code>, the <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code> and the <code><a href=\"../Wasmer/Value.html\">Value</a></code></p>","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"type","external_name":"type","restriction":"GlobalType"},{"name":"value","external_name":"value","restriction":"Value"}],"args_string":"(store : Store, type : GlobalType, value : Value)","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, type : <a href=\"../Wasmer/GlobalType.html\">GlobalType</a>, value : <a href=\"../Wasmer/Value.html\">Value</a>)","location":{"filename":"src/wasmer/global.cr","line_number":117,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L117"},"def":{"name":"new","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"type","external_name":"type","restriction":"GlobalType"},{"name":"value","external_name":"value","restriction":"Value"}],"visibility":"Public","body":"_ = allocate\n_.initialize(store, type, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"get-instance-method","name":"get","doc":"Returns the `Global`'s value as native Crystal value","summary":"<p>Returns the <code><a href=\"../Wasmer/Global.html\">Global</a></code>'s value as native Crystal value</p>","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":147,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L147"},"def":{"name":"get","visibility":"Public","body":"LibWasmer.wasm_global_get(self, out value)\n(Value.new(value)).unwrap\n"}},{"html_id":"set(value):Nil-instance-method","name":"set","doc":"Sets the `Global`'s value\nIt takes two arguments, value as a native Crystal value","summary":"<p>Sets the <code><a href=\"../Wasmer/Global.html\">Global</a></code>'s value It takes two arguments, value as a native Crystal value</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value) : Nil","args_html":"(value) : Nil","location":{"filename":"src/wasmer/global.cr","line_number":140,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L140"},"def":{"name":"set","args":[{"name":"value","external_name":"value","restriction":""}],"return_type":"Nil","visibility":"Public","body":"if type.mutability == Immutable\n  raise(WasmerError.new(\"The global variable is not mutable, cannot set a new value\"))\nend\nv = (Value.new(value)).to_unsafe\nLibWasmer.wasm_global_set(self, pointerof(v))\n"}},{"html_id":"to_extern:Extern-instance-method","name":"to_extern","doc":"Converts the `Global` into an `Extern`","summary":"<p>Converts the <code><a href=\"../Wasmer/Global.html\">Global</a></code> into an <code><a href=\"../Wasmer/Extern.html\">Extern</a></code></p>","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":127,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L127"},"def":{"name":"to_extern","return_type":"Extern","visibility":"Public","body":"p = LibWasmer.wasm_global_as_extern(self)\nExtern.new(p)\n"}},{"html_id":"type:GlobalType-instance-method","name":"type","doc":"Returns the `Global`'s `GlobalType`","summary":"<p>Returns the <code><a href=\"../Wasmer/Global.html\">Global</a></code>'s <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code></p>","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":133,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L133"},"def":{"name":"type","return_type":"GlobalType","visibility":"Public","body":"p = LibWasmer.wasm_global_type(self)\nGlobalType.new(p)\n"}},{"html_id":"value-instance-method","name":"value","doc":"Returns the `Global`'s value as native Crystal value. it just calls `get`","summary":"<p>Returns the <code><a href=\"../Wasmer/Global.html\">Global</a></code>'s value as native Crystal value.</p>","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":158,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L158"},"def":{"name":"value","visibility":"Public","body":"get"}},{"html_id":"value=(value)-instance-method","name":"value=","doc":"Sets the `Global`'s value. it calls `set` method","summary":"<p>Sets the <code><a href=\"../Wasmer/Global.html\">Global</a></code>'s value.</p>","abstract":false,"args":[{"name":"value","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/wasmer/global.cr","line_number":153,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L153"},"def":{"name":"value=","args":[{"name":"value","external_name":"value","restriction":""}],"visibility":"Public","body":"set(value)"}}]},{"html_id":"wasmer/Wasmer/GlobalMutability","path":"Wasmer/GlobalMutability.html","kind":"enum","full_name":"Wasmer::GlobalMutability","name":"GlobalMutability","abstract":false,"ancestors":[{"html_id":"wasmer/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"wasmer/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"wasmer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/global.cr","line_number":9,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L9"}],"repository_name":"wasmer","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Immutable","name":"Immutable","value":"0_u8","doc":"Represents a global that is constant","summary":"<p>Represents a global that is constant</p>"},{"id":"Mutable","name":"Mutable","value":"1_u8","doc":"Represents a global that is mutable","summary":"<p>Represents a global that is mutable</p>"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"instance_methods":[{"html_id":"immutable?-instance-method","name":"immutable?","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":11,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L11"},"def":{"name":"immutable?","visibility":"Public","body":"self == Immutable"}},{"html_id":"mutable?-instance-method","name":"mutable?","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":14,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L14"},"def":{"name":"mutable?","visibility":"Public","body":"self == Mutable"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a `String` representation of this enum member to the given *io*.\n\nSee also: `to_s`.","summary":"<p>Appends a <code>String</code> representation of this enum member to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/wasmer/global.cr","line_number":16,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L16"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << (case self\nwhen .immutable?\n  \"const\"\nwhen .mutable?\n  \"var\"\nend)"}}]},{"html_id":"wasmer/Wasmer/GlobalType","path":"Wasmer/GlobalType.html","kind":"class","full_name":"Wasmer::GlobalType","name":"GlobalType","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExternType","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/global.cr","line_number":32,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L32"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExternType","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"GlobalType classifies global variables, which hold a value and can either be mutable or immutable.\nSee Also:\nSpecification: https://webassembly.github.io/spec/core/syntax/types.html#global-types","summary":"<p>GlobalType classifies global variables, which hold a value and can either be mutable or immutable.</p>","constructors":[{"html_id":"new(val_type:ValueType,mutability:GlobalMutability)-class-method","name":"new","doc":"Instantiates a new `GlobalType` from a `ValueType` and `GlobalMutability`\n\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::Immutable)\n```","summary":"<p>Instantiates a new <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code> from a <code><a href=\"../Wasmer/ValueType.html\">ValueType</a></code> and <code><a href=\"../Wasmer/GlobalMutability.html\">GlobalMutability</a></code></p>","abstract":false,"args":[{"name":"val_type","external_name":"val_type","restriction":"ValueType"},{"name":"mutability","external_name":"mutability","restriction":"GlobalMutability"}],"args_string":"(val_type : ValueType, mutability : GlobalMutability)","args_html":"(val_type : <a href=\"../Wasmer/ValueType.html\">ValueType</a>, mutability : <a href=\"../Wasmer/GlobalMutability.html\">GlobalMutability</a>)","location":{"filename":"src/wasmer/global.cr","line_number":41,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L41"},"def":{"name":"new","args":[{"name":"val_type","external_name":"val_type","restriction":"ValueType"},{"name":"mutability","external_name":"mutability","restriction":"GlobalMutability"}],"visibility":"Public","body":"_ = allocate\n_.initialize(val_type, mutability)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"mutability:GlobalMutability-instance-method","name":"mutability","doc":"Returns the `GlobalType`'s `GlobalMutability`\n\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::Immutable)\nputs global_type.mutability # => const\n```","summary":"<p>Returns the <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code>'s <code><a href=\"../Wasmer/GlobalMutability.html\">GlobalMutability</a></code></p>","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":70,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L70"},"def":{"name":"mutability","return_type":"GlobalMutability","visibility":"Public","body":"v = LibWasmer.wasm_globaltype_mutability(self)\nGlobalMutability.from_value(v)\n"}},{"html_id":"mutable?-instance-method","name":"mutable?","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":75,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L75"},"def":{"name":"mutable?","visibility":"Public","body":"mutability == Wasmer::Mutable"}},{"html_id":"to_externtype:ExternType-instance-method","name":"to_externtype","doc":"Converts this `GlobalType` into an `Externype`\n\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::Immutable)\nextern_type = global_type.to_externtype\n```","summary":"<p>Converts this <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code> into an <code>Externype</code></p>","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":86,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L86"},"def":{"name":"to_externtype","return_type":"ExternType","visibility":"Public","body":"v = LibWasmer.wasm_globaltype_as_externtype_const(self)\nExternType.new(v)\n"}},{"html_id":"value_type:ValueType-instance-method","name":"value_type","doc":"Returns the `GlobalType`'s `ValueType`\n\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::Immutable)\nputs global_type.value_type.kind # => i32\n```","summary":"<p>Returns the <code><a href=\"../Wasmer/GlobalType.html\">GlobalType</a></code>'s <code><a href=\"../Wasmer/ValueType.html\">ValueType</a></code></p>","abstract":false,"location":{"filename":"src/wasmer/global.cr","line_number":58,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/global.cr#L58"},"def":{"name":"value_type","return_type":"ValueType","visibility":"Public","body":"v = LibWasmer.wasm_globaltype_content(self)\nValueType.new(v)\n"}}]},{"html_id":"wasmer/Wasmer/HostFunction","path":"Wasmer/HostFunction.html","kind":"alias","full_name":"Wasmer::HostFunction","name":"HostFunction","abstract":false,"locations":[{"filename":"src/wasmer/function.cr","line_number":68,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L68"}],"repository_name":"wasmer","program":false,"enum":false,"alias":true,"aliased":"(Proc(Array(Wasmer::Value), Array(Wasmer::Value)) | Proc(Pointer(Void), Array(Wasmer::Value), Array(Wasmer::Value)))","aliased_html":"Array(<a href=\"../Wasmer/Value.html\">Wasmer::Value</a>) -> Array(<a href=\"../Wasmer/Value.html\">Wasmer::Value</a>) | Pointer(Void), Array(<a href=\"../Wasmer/Value.html\">Wasmer::Value</a>) -> Array(<a href=\"../Wasmer/Value.html\">Wasmer::Value</a>)","const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"}},{"html_id":"wasmer/Wasmer/ImportObject","path":"Wasmer/ImportObject.html","kind":"class","full_name":"Wasmer::ImportObject","name":"ImportObject","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/import.cr","line_number":10,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L10"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"ImportObject contains all of the import data used when\ninstantiating a WebAssembly module.","summary":"<p>ImportObject contains all of the import data used when instantiating a WebAssembly module.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/wasmer/import.cr","line_number":13,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L13"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"contains_namespace?(name:String):Bool-instance-method","name":"contains_namespace?","doc":"Returns true if the `ImportObject` contains the given namespace (or module name)\n```\nimports = ImportObject.new\nimports.contains_namespace?(\"env\")\n```","summary":"<p>Returns true if the <code><a href=\"../Wasmer/ImportObject.html\">ImportObject</a></code> contains the given namespace (or module name) <code>imports = <a href=\"../Wasmer/ImportObject.html#new-class-method\">ImportObject.new</a> imports.contains_namespace?(&quot;env&quot;)</code></p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","args_html":"(name : String) : Bool","location":{"filename":"src/wasmer/import.cr","line_number":37,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L37"},"def":{"name":"contains_namespace?","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Bool","visibility":"Public","body":"@externs.has_key?(name)"}},{"html_id":"externs:Hash(String,Hash(String,WithExtern))-instance-method","name":"externs","abstract":false,"location":{"filename":"src/wasmer/import.cr","line_number":11,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L11"},"def":{"name":"externs","return_type":"Hash(String, Hash(String, WithExtern))","visibility":"Public","body":"@externs"}},{"html_id":"register(ns_name:String,ns:Hash(String,WithExtern)):Nil-instance-method","name":"register","doc":"Registers a namespace (or module name) in the `ImportObject`.\nIt takes two arguments: the namespace name and a hash with imports names as key and externs as value\nNote: An extern is anything implementing `WithExtern` : `Function`, `Global`, `Memory`, `Table`\n\n```\nimports = ImportObject.new\nimports.register(\"env\", {\"host_function\" => host_function, \"host_global\" => host_global})\n```\nNote: The namespace (or module name) may be empty:\n```\nimports = ImportObject.new\nimports.register(\"\", {\"host_function\" => host_function, \"host_global\" => host_global})\n```","summary":"<p>Registers a namespace (or module name) in the <code><a href=\"../Wasmer/ImportObject.html\">ImportObject</a></code>.</p>","abstract":false,"args":[{"name":"ns_name","external_name":"ns_name","restriction":"String"},{"name":"ns","external_name":"ns","restriction":"Hash(String, WithExtern)"}],"args_string":"(ns_name : String, ns : Hash(String, WithExtern)) : Nil","args_html":"(ns_name : String, ns : Hash(String, <a href=\"../Wasmer/WithExtern.html\">WithExtern</a>)) : Nil","location":{"filename":"src/wasmer/import.cr","line_number":54,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L54"},"def":{"name":"register","args":[{"name":"ns_name","external_name":"ns_name","restriction":"String"},{"name":"ns","external_name":"ns","restriction":"Hash(String, WithExtern)"}],"return_type":"Nil","visibility":"Public","body":"if val = @externs[ns_name]?\n  ns.each do |k, v|\n    val[k] = v\n  end\nelse\n  @externs[ns_name] = ns\nend"}}]},{"html_id":"wasmer/Wasmer/ImportType","path":"Wasmer/ImportType.html","kind":"class","full_name":"Wasmer::ImportType","name":"ImportType","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/import.cr","line_number":64,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L64"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"ImportType is a descriptor for an imported value into a WebAssembly module","summary":"<p>ImportType is a descriptor for an imported value into a WebAssembly module</p>","constructors":[{"html_id":"new(namespace:String,name:String,type:WithExternType)-class-method","name":"new","doc":"Instantiates a new `ImportType` with a module name (or namespace),\na name and en extern type.\n\nNote: An extern is anything implementing `WithExtern` : `Function`, `Global`, `Memory`, `Table`\n\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::IMMUTABLE)\nimport_type = ImportType.new(\"ns\", \"host_global\", global_type)\n```","summary":"<p>Instantiates a new <code><a href=\"../Wasmer/ImportType.html\">ImportType</a></code> with a module name (or namespace), a name and en extern type.</p>","abstract":false,"args":[{"name":"namespace","external_name":"namespace","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"type","external_name":"type","restriction":"WithExternType"}],"args_string":"(namespace : String, name : String, type : WithExternType)","args_html":"(namespace : String, name : String, type : <a href=\"../Wasmer/WithExternType.html\">WithExternType</a>)","location":{"filename":"src/wasmer/import.cr","line_number":75,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L75"},"def":{"name":"new","args":[{"name":"namespace","external_name":"namespace","restriction":"String"},{"name":"name","external_name":"name","restriction":"String"},{"name":"type","external_name":"type","restriction":"WithExternType"}],"visibility":"Public","body":"_ = allocate\n_.initialize(namespace, name, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"mod_name:String-instance-method","name":"mod_name","doc":"Returns the `ImportType`'s module name (or namespace)\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::IMMUTABLE)\nimport_type = ImportType.new(\"ns\", \"host_global\", global_type)\nimport_type.mod_name\n```","summary":"<p>Returns the <code><a href=\"../Wasmer/ImportType.html\">ImportType</a></code>'s module name (or namespace) <code>val_type = <a href=\"../Wasmer/ValueType.html#new%28kind%3AValueKind%29-class-method\">ValueType.new(Wasmer::I32)</a> global_type = <a href=\"../Wasmer/GlobalType.html#new%28val_type%3AValueType%2Cmutability%3AGlobalMutability%29-class-method\">GlobalType.new(val_type, Wasmer::IMMUTABLE)</a> import_type = <a href=\"../Wasmer/ImportType.html#new%28namespace%3AString%2Cname%3AString%2Ctype%3AWithExternType%29-class-method\">ImportType.new(&quot;ns&quot;, &quot;host_global&quot;, global_type)</a> import_type.mod_name</code></p>","abstract":false,"location":{"filename":"src/wasmer/import.cr","line_number":95,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L95"},"def":{"name":"mod_name","return_type":"String","visibility":"Public","body":"byte_vec = (LibWasmer.wasm_importtype_module(self)).value\n(String.new(byte_vec.data))[...byte_vec.size]\n"}},{"html_id":"name:String-instance-method","name":"name","doc":"Returns the `ImportType`'s name\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::IMMUTABLE)\nimport_type = ImportType.new(\"ns\", \"host_global\", global_type)\nimport_type.name\n```","summary":"<p>Returns the <code><a href=\"../Wasmer/ImportType.html\">ImportType</a></code>'s name <code>val_type = <a href=\"../Wasmer/ValueType.html#new%28kind%3AValueKind%29-class-method\">ValueType.new(Wasmer::I32)</a> global_type = <a href=\"../Wasmer/GlobalType.html#new%28val_type%3AValueType%2Cmutability%3AGlobalMutability%29-class-method\">GlobalType.new(val_type, Wasmer::IMMUTABLE)</a> import_type = <a href=\"../Wasmer/ImportType.html#new%28namespace%3AString%2Cname%3AString%2Ctype%3AWithExternType%29-class-method\">ImportType.new(&quot;ns&quot;, &quot;host_global&quot;, global_type)</a> import_type.name</code></p>","abstract":false,"location":{"filename":"src/wasmer/import.cr","line_number":107,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L107"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"byte_vec = (LibWasmer.wasm_importtype_name(self)).value\n(String.new(byte_vec.data))[...byte_vec.size]\n"}},{"html_id":"type:ExternType-instance-method","name":"type","doc":"Returns the `ImportType`'s type as an `ExternType`\n```\nval_type = ValueType.new(Wasmer::I32)\nglobal_type = GlobalType.new(val_type, Wasmer::IMMUTABLE)\nimport_type = ImportType.new(\"ns\", \"host_global\", global_type)\nimport_type.type\n```","summary":"<p>Returns the <code><a href=\"../Wasmer/ImportType.html\">ImportType</a></code>'s type as an <code><a href=\"../Wasmer/ExternType.html\">ExternType</a></code> <code>val_type = <a href=\"../Wasmer/ValueType.html#new%28kind%3AValueKind%29-class-method\">ValueType.new(Wasmer::I32)</a> global_type = <a href=\"../Wasmer/GlobalType.html#new%28val_type%3AValueType%2Cmutability%3AGlobalMutability%29-class-method\">GlobalType.new(val_type, Wasmer::IMMUTABLE)</a> import_type = <a href=\"../Wasmer/ImportType.html#new%28namespace%3AString%2Cname%3AString%2Ctype%3AWithExternType%29-class-method\">ImportType.new(&quot;ns&quot;, &quot;host_global&quot;, global_type)</a> import_type.type</code></p>","abstract":false,"location":{"filename":"src/wasmer/import.cr","line_number":119,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/import.cr#L119"},"def":{"name":"type","return_type":"ExternType","visibility":"Public","body":"ty = LibWasmer.wasm_importtype_type(self)\nExternType.new(ty)\n"}}]},{"html_id":"wasmer/Wasmer/Instance","path":"Wasmer/Instance.html","kind":"class","full_name":"Wasmer::Instance","name":"Instance","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/instance.cr","line_number":16,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/instance.cr#L16"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"A WebAssembly `Instance` is a stateful, executable instance of a\nWebAssembly [`Module`].\n\nInstance objects contain all the exported WebAssembly\nfunctions, memories, tables and globals that allow interacting\nwith WebAssembly.\n\nSpecification:\n<https://webassembly.github.io/spec/core/exec/runtime.html#module-instances>","summary":"<p>A WebAssembly <code><a href=\"../Wasmer/Instance.html\">Instance</a></code> is a stateful, executable instance of a WebAssembly [<code><a href=\"../Wasmer/Module.html\">Module</a></code>].</p>","constructors":[{"html_id":"new(mod:Module,imports:ImportObject)-class-method","name":"new","doc":"Instantiates a new `Instance`\nIt takes two arguments, the `Module` and an `ImportObject`\nNote: Instantiating a module may raise `TrapException` if the module's start function traps.","summary":"<p>Instantiates a new <code><a href=\"../Wasmer/Instance.html\">Instance</a></code> It takes two arguments, the <code><a href=\"../Wasmer/Module.html\">Module</a></code> and an <code><a href=\"../Wasmer/ImportObject.html\">ImportObject</a></code> Note: Instantiating a module may raise <code><a href=\"../Wasmer/TrapException.html\">TrapException</a></code> if the module's start function traps.</p>","abstract":false,"args":[{"name":"mod","external_name":"mod","restriction":"Module"},{"name":"imports","external_name":"imports","restriction":"ImportObject"}],"args_string":"(mod : Module, imports : ImportObject)","args_html":"(mod : <a href=\"../Wasmer/Module.html\">Module</a>, imports : <a href=\"../Wasmer/ImportObject.html\">ImportObject</a>)","location":{"filename":"src/wasmer/instance.cr","line_number":22,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/instance.cr#L22"},"def":{"name":"new","args":[{"name":"mod","external_name":"mod","restriction":"Module"},{"name":"imports","external_name":"imports","restriction":"ImportObject"}],"visibility":"Public","body":"_ = allocate\n_.initialize(mod, imports)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(mod:Module)-class-method","name":"new","abstract":false,"args":[{"name":"mod","external_name":"mod","restriction":"Module"}],"args_string":"(mod : Module)","args_html":"(mod : <a href=\"../Wasmer/Module.html\">Module</a>)","location":{"filename":"src/wasmer/instance.cr","line_number":31,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/instance.cr#L31"},"def":{"name":"new","args":[{"name":"mod","external_name":"mod","restriction":"Module"}],"visibility":"Public","body":"new(mod, ImportObject.new)"}}],"instance_methods":[{"html_id":"exports:Exports-instance-method","name":"exports","abstract":false,"location":{"filename":"src/wasmer/instance.cr","line_number":17,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/instance.cr#L17"},"def":{"name":"exports","return_type":"Exports","visibility":"Public","body":"@exports"}}],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","abstract":false,"args":[{"name":"call","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/wasmer/instance.cr","line_number":46,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/instance.cr#L46"},"def":{"name":"method_missing","args":[{"name":"call","external_name":"call","restriction":""}],"visibility":"Public","body":"      @exports.\n{{ call }}\n\n    \n"}}]},{"html_id":"wasmer/Wasmer/Limits","path":"Wasmer/Limits.html","kind":"class","full_name":"Wasmer::Limits","name":"Limits","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/limits.cr","line_number":14,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/limits.cr#L14"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Limits classify the size range of resizable storage associated with `Memory` types and `Table` types.\nSee also\nSpecification: https://webassembly.github.io/spec/core/syntax/types.html#limits","summary":"<p>Limits classify the size range of resizable storage associated with <code><a href=\"../Wasmer/Memory.html\">Memory</a></code> types and <code><a href=\"../Wasmer/Table.html\">Table</a></code> types.</p>","constructors":[{"html_id":"new(min:Int,max:Int)-class-method","name":"new","doc":"Instantiates a new limit which describes the Memory used. The `min` and `max` parameters\nare number of memory pages.\nNote: Each page is 64 KiB in size\n\nNote: You cannot `Memory#grow` the `Memory` beyond the maximum bound defined here","summary":"<p>Instantiates a new limit which describes the Memory used.</p>","abstract":false,"args":[{"name":"min","external_name":"min","restriction":"Int"},{"name":"max","external_name":"max","restriction":"Int"}],"args_string":"(min : Int, max : Int)","args_html":"(min : Int, max : Int)","location":{"filename":"src/wasmer/limits.cr","line_number":20,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/limits.cr#L20"},"def":{"name":"new","args":[{"name":"min","external_name":"min","restriction":"Int"},{"name":"max","external_name":"max","restriction":"Int"}],"visibility":"Public","body":"_ = allocate\n_.initialize(min, max)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(ptr:LibWasmer::WasmLimitsT)-class-method","name":"new","abstract":false,"args":[{"name":"ptr","external_name":"ptr","restriction":"LibWasmer::WasmLimitsT"}],"args_string":"(ptr : LibWasmer::WasmLimitsT)","args_html":"(ptr : LibWasmer::WasmLimitsT)","location":{"filename":"src/wasmer/limits.cr","line_number":27,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/limits.cr#L27"},"def":{"name":"new","args":[{"name":"ptr","external_name":"ptr","restriction":"LibWasmer::WasmLimitsT"}],"visibility":"Public","body":"_ = allocate\n_.initialize(ptr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"maximum-instance-method","name":"maximum","doc":"Returns the maximum size of the Memory allocated in \"number of pages\"\nNote: Each page is 64 KiB in size.\nNote: YOu cannot grow memory beyond this defined size","summary":"<p>Returns the maximum size of the Memory allocated in &quot;number of pages&quot; Note: Each page is 64 KiB in size.</p>","abstract":false,"location":{"filename":"src/wasmer/limits.cr","line_number":39,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/limits.cr#L39"},"def":{"name":"maximum","visibility":"Public","body":"@ptr.max"}},{"html_id":"minimum-instance-method","name":"minimum","doc":"Returns the mimimum size of the Memory allocated in \"number of pages\"\nNote: Each page is 64 KiB in size.","summary":"<p>Returns the mimimum size of the Memory allocated in &quot;number of pages&quot; Note: Each page is 64 KiB in size.</p>","abstract":false,"location":{"filename":"src/wasmer/limits.cr","line_number":32,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/limits.cr#L32"},"def":{"name":"minimum","visibility":"Public","body":"@ptr.min"}}]},{"html_id":"wasmer/Wasmer/Memory","path":"Wasmer/Memory.html","kind":"class","full_name":"Wasmer::Memory","name":"Memory","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/memory.cr","line_number":41,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L41"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Memory is a vector of raw uninterpreted bytes.\nSee Also\nSpecification: https://webassembly.github.io/spec/core/syntax/modules.html#memories","summary":"<p>Memory is a vector of raw uninterpreted bytes.</p>","constructors":[{"html_id":"new(store:Store,type:MemoryType)-class-method","name":"new","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"type","external_name":"type","restriction":"MemoryType"}],"args_string":"(store : Store, type : MemoryType)","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, type : <a href=\"../Wasmer/MemoryType.html\">MemoryType</a>)","location":{"filename":"src/wasmer/memory.cr","line_number":44,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L44"},"def":{"name":"new","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"type","external_name":"type","restriction":"MemoryType"}],"visibility":"Public","body":"_ = allocate\n_.initialize(store, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"bytesize:UInt32-instance-method","name":"bytesize","doc":"Returns memory size as a number of bytes","summary":"<p>Returns memory size as a number of bytes</p>","abstract":false,"location":{"filename":"src/wasmer/memory.cr","line_number":63,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L63"},"def":{"name":"bytesize","return_type":"UInt32","visibility":"Public","body":"(LibWasmer.wasm_memory_data_size(self)).to_u32"}},{"html_id":"data:Bytes-instance-method","name":"data","doc":"Returns memory contents as Bytes","summary":"<p>Returns memory contents as Bytes</p>","abstract":false,"location":{"filename":"src/wasmer/memory.cr","line_number":68,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L68"},"def":{"name":"data","return_type":"Bytes","visibility":"Public","body":"len = bytesize\ndata = LibWasmer.wasm_memory_data(self)\nBytes.new(data, len)\n"}},{"html_id":"grow(delta:Pages):Bool-instance-method","name":"grow","doc":"Grows the Memory's size by a given number of `Pages` (the delta)","summary":"<p>Grows the Memory's size by a given number of <code><a href=\"../Wasmer/Pages.html\">Pages</a></code> (the delta)</p>","abstract":false,"args":[{"name":"delta","external_name":"delta","restriction":"Pages"}],"args_string":"(delta : Pages) : Bool","args_html":"(delta : <a href=\"../Wasmer/Pages.html\">Pages</a>) : Bool","location":{"filename":"src/wasmer/memory.cr","line_number":75,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L75"},"def":{"name":"grow","args":[{"name":"delta","external_name":"delta","restriction":"Pages"}],"return_type":"Bool","visibility":"Public","body":"LibWasmer.wasm_memory_grow(self, delta)"}},{"html_id":"size:Pages-instance-method","name":"size","doc":"Returns memory size as Pages","summary":"<p>Returns memory size as Pages</p>","abstract":false,"location":{"filename":"src/wasmer/memory.cr","line_number":58,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L58"},"def":{"name":"size","return_type":"Pages","visibility":"Public","body":"Pages.new(LibWasmer.wasm_memory_size(self))"}},{"html_id":"to_extern:Extern-instance-method","name":"to_extern","abstract":false,"location":{"filename":"src/wasmer/memory.cr","line_number":86,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L86"},"def":{"name":"to_extern","return_type":"Extern","visibility":"Public","body":"p = LibWasmer.wasm_memory_as_extern(self)\nExtern.new(p)\n"}},{"html_id":"type:MemoryType-instance-method","name":"type","doc":"Returns memory's MemoryType","summary":"<p>Returns memory's MemoryType</p>","abstract":false,"location":{"filename":"src/wasmer/memory.cr","line_number":53,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L53"},"def":{"name":"type","return_type":"MemoryType","visibility":"Public","body":"MemoryType.new(LibWasmer.wasm_memory_type(self))"}},{"html_id":"view(offset:Int)-instance-method","name":"view","doc":"Returns the view of memory starting from provided offset\nraises if offset is greater than memory byte size","summary":"<p>Returns the view of memory starting from provided offset raises if offset is greater than memory byte size</p>","abstract":false,"args":[{"name":"offset","external_name":"offset","restriction":"Int"}],"args_string":"(offset : Int)","args_html":"(offset : Int)","location":{"filename":"src/wasmer/memory.cr","line_number":81,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L81"},"def":{"name":"view","args":[{"name":"offset","external_name":"offset","restriction":"Int"}],"visibility":"Public","body":"if offset < bytesize\nelse\n  raise(WasmerError.new(\"offset exceeded the memory size.\"))\nend\ndata[offset..]\n"}}]},{"html_id":"wasmer/Wasmer/MemoryType","path":"Wasmer/MemoryType.html","kind":"class","full_name":"Wasmer::MemoryType","name":"MemoryType","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExternType","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/memory.cr","line_number":11,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L11"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExternType","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"MemoryType classifies linear memories and their size range.\nSee Also\nSpecification: https://webassembly.github.io/spec/core/syntax/types.html#memory-types","summary":"<p>MemoryType classifies linear memories and their size range.</p>","constructors":[{"html_id":"new(limit:Limits)-class-method","name":"new","abstract":false,"args":[{"name":"limit","external_name":"limit","restriction":"Limits"}],"args_string":"(limit : Limits)","args_html":"(limit : <a href=\"../Wasmer/Limits.html\">Limits</a>)","location":{"filename":"src/wasmer/memory.cr","line_number":14,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L14"},"def":{"name":"new","args":[{"name":"limit","external_name":"limit","restriction":"Limits"}],"visibility":"Public","body":"_ = allocate\n_.initialize(limit)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"limits:Limits-instance-method","name":"limits","doc":"Returns MemoryType's limits","summary":"<p>Returns MemoryType's limits</p>","abstract":false,"location":{"filename":"src/wasmer/memory.cr","line_number":23,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L23"},"def":{"name":"limits","return_type":"Limits","visibility":"Public","body":"Limits.new((LibWasmer.wasm_memorytype_limits(self)).value)"}},{"html_id":"to_externtype:ExternType-instance-method","name":"to_externtype","abstract":false,"location":{"filename":"src/wasmer/memory.cr","line_number":27,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/memory.cr#L27"},"def":{"name":"to_externtype","return_type":"ExternType","visibility":"Public","body":"p = LibWasmer.wasm_memorytype_as_externtype_const(self)\nExternType.new(p)\n"}}]},{"html_id":"wasmer/Wasmer/Module","path":"Wasmer/Module.html","kind":"class","full_name":"Wasmer::Module","name":"Module","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/module.cr","line_number":21,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L21"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Module contains stateless WebAssembly code that has already been\ncompiled and can be instantiated multiple times.\n\nWebAssembly programs are organized into modules, which are the unit\nof deployment, loading, and compilation. A module collects\ndefinitions for types, functions, tables, memories, and globals. In\naddition, it can declare imports and exports and provide\ninitialization logic in the form of data and element segments or a\nstart function.\n\nSee also\n\nSpecification: https://webassembly.github.io/spec/core/syntax/modules.html#modules","summary":"<p>Module contains stateless WebAssembly code that has already been compiled and can be instantiated multiple times.</p>","constructors":[{"html_id":"deserialize(store:Store,bytes:Bytes):Module-class-method","name":"deserialize","doc":"Deserializes bytes to a Module","summary":"<p>Deserializes bytes to a Module</p>","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(store : Store, bytes : Bytes) : Module","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, bytes : Bytes) : <a href=\"../Wasmer/Module.html\">Module</a>","location":{"filename":"src/wasmer/module.cr","line_number":79,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L79"},"def":{"name":"deserialize","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Module","visibility":"Public","body":"vec = LibWasmer::WasmByteVecT.new\nvec.size = bytes.bytesize\nvec.data = bytes.to_unsafe\nptr = LibWasmer.wasm_module_deserialize(self, pointerof(vec))\nif ptr.null?\n  Wasmer.check_error\nend\nnew(ptr)\n"}},{"html_id":"new(store:Store,bytes:Bytes)-class-method","name":"new","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(store : Store, bytes : Bytes)","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, bytes : Bytes)","location":{"filename":"src/wasmer/module.cr","line_number":29,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L29"},"def":{"name":"new","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"visibility":"Public","body":"new(store, String.new(bytes))"}},{"html_id":"new(store:Store,wat:String)-class-method","name":"new","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"wat","external_name":"wat","restriction":"String"}],"args_string":"(store : Store, wat : String)","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, wat : String)","location":{"filename":"src/wasmer/module.cr","line_number":33,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L33"},"def":{"name":"new","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"wat","external_name":"wat","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(store, wat)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"exports:Array(ExportType)-instance-method","name":"exports","doc":"Returns the Module's exports as an `ExportType` array","summary":"<p>Returns the Module's exports as an <code><a href=\"../Wasmer/ExportType.html\">ExportType</a></code> array</p>","abstract":false,"location":{"filename":"src/wasmer/module.cr","line_number":67,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L67"},"def":{"name":"exports","return_type":"Array(ExportType)","visibility":"Public","body":"export_types.export_types"}},{"html_id":"imports:Array(ImportType)-instance-method","name":"imports","doc":"Returns the Module's imports as an `ImportType` array","summary":"<p>Returns the Module's imports as an <code><a href=\"../Wasmer/ImportType.html\">ImportType</a></code> array</p>","abstract":false,"location":{"filename":"src/wasmer/module.cr","line_number":62,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L62"},"def":{"name":"imports","return_type":"Array(ImportType)","visibility":"Public","body":"import_types.import_types"}},{"html_id":"name:String-instance-method","name":"name","doc":"Returns the Module's name\nNote: This is not part of the standard Wasm C API. It is Wasmer specific","summary":"<p>Returns the Module's name Note: This is not part of the standard Wasm C API.</p>","abstract":false,"location":{"filename":"src/wasmer/module.cr","line_number":54,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L54"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"LibWasmer.wasmer_module_name(self, out name)\nret = (String.new(name.data))[...name.size]\nLibWasmer.wasm_byte_vec_delete(pointerof(name))\nret\n"}},{"html_id":"serialize:Bytes-instance-method","name":"serialize","doc":"Serializes the module and returns the Wasm code as bytes","summary":"<p>Serializes the module and returns the Wasm code as bytes</p>","abstract":false,"location":{"filename":"src/wasmer/module.cr","line_number":72,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L72"},"def":{"name":"serialize","return_type":"Bytes","visibility":"Public","body":"LibWasmer.wasm_module_serialize(self, out bytes)\nif bytes.data.null?\n  Wasmer.check_error\nend\nBytes.new(bytes.data, bytes.size)\n"}},{"html_id":"validate(store:Store,bytes:Bytes):Nil-instance-method","name":"validate","doc":"Validates a new `Module` against the given store.","summary":"<p>Validates a new <code><a href=\"../Wasmer/Module.html\">Module</a></code> against the given store.</p>","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(store : Store, bytes : Bytes) : Nil","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, bytes : Bytes) : Nil","location":{"filename":"src/wasmer/module.cr","line_number":43,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/module.cr#L43"},"def":{"name":"validate","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Nil","visibility":"Public","body":"@store = store\nwasm = Wasmer.wat2wasm(String.new(bytes))\nwasm_vec = LibWasmer::WasmByteVecT.new\nwasm_vec.size = wasm.bytesize\nwasm_vec.data = wasm.to_unsafe\nret = LibWasmer.wasm_module_validate(@store, pointerof(wasm_vec))\nif ret\nelse\n  Wasmer.check_error\nend\n"}}]},{"html_id":"wasmer/Wasmer/Name","path":"Wasmer/Name.html","kind":"class","full_name":"Wasmer::Name","name":"Name","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/target.cr","line_number":4,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L4"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"constructors":[{"html_id":"new(name:String)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/wasmer/target.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L7"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/wasmer/target.cr","line_number":11,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L11"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"if @ptr.size > 0 && @ptr.data\n  io << (String.new(@ptr.data))[...@ptr.size]\nend"}}]},{"html_id":"wasmer/Wasmer/Pages","path":"Wasmer/Pages.html","kind":"struct","full_name":"Wasmer::Pages","name":"Pages","abstract":false,"superclass":{"html_id":"wasmer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"wasmer/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"wasmer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/pages.cr","line_number":5,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/pages.cr#L5"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MaxPages","name":"MaxPages","value":"65536_u32","doc":"Represents the maximum number of pages","summary":"<p>Represents the maximum number of pages</p>"},{"id":"MinPages","name":"MinPages","value":"256_u32","doc":"Represents the minimum number of pages","summary":"<p>Represents the minimum number of pages</p>"},{"id":"PageSize","name":"PageSize","value":"65536_u32","doc":"Represents a memory page size","summary":"<p>Represents a memory page size</p>"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Units of WebAssembly pages (as specified to be 65,536 bytes)","summary":"<p>Units of WebAssembly pages (as specified to be 65,536 bytes)</p>","constructors":[{"html_id":"new(val:Number)-class-method","name":"new","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Number"}],"args_string":"(val : Number)","args_html":"(val : Number)","location":{"filename":"src/wasmer/pages.cr","line_number":17,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/pages.cr#L17"},"def":{"name":"new","args":[{"name":"val","external_name":"val","restriction":"Number"}],"visibility":"Public","body":"_ = allocate\n_.initialize(val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"to_bytes:UInt32-instance-method","name":"to_bytes","doc":"Converts Pages to a native Crystal UInt32 which is the Pages' size in bytes","summary":"<p>Converts Pages to a native Crystal UInt32 which is the Pages' size in bytes</p>","abstract":false,"location":{"filename":"src/wasmer/pages.cr","line_number":27,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/pages.cr#L27"},"def":{"name":"to_bytes","return_type":"UInt32","visibility":"Public","body":"@value * PageSize"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/wasmer/pages.cr","line_number":31,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/pages.cr#L31"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << to_u32"}},{"html_id":"to_u32:UInt32-instance-method","name":"to_u32","doc":"Converts Pages to a native Crystal UInt32 which is the Pages' size","summary":"<p>Converts Pages to a native Crystal UInt32 which is the Pages' size</p>","abstract":false,"location":{"filename":"src/wasmer/pages.cr","line_number":22,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/pages.cr#L22"},"def":{"name":"to_u32","visibility":"Public","body":"@value"}}]},{"html_id":"wasmer/Wasmer/Store","path":"Wasmer/Store.html","kind":"class","full_name":"Wasmer::Store","name":"Store","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/store.cr","line_number":13,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/store.cr#L13"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Store represents all global state that can be manipulated by\nWebAssembly programs. It consists of the runtime representation of\nall instances of functions, tables, memories, and globals that have\nbeen allocated during the life time of the abstract machine.\nThe Store holds the Engine (that is — amongst many things — used to\ncompile the Wasm bytes into a valid module artifact).\nSee also\nSpecification: https://webassembly.github.io/spec/core/exec/runtime.html#store","summary":"<p>Store represents all global state that can be manipulated by WebAssembly programs.</p>","constructors":[{"html_id":"new(engine:Engine)-class-method","name":"new","abstract":false,"args":[{"name":"engine","external_name":"engine","restriction":"Engine"}],"args_string":"(engine : Engine)","args_html":"(engine : <a href=\"../Wasmer/Engine.html\">Engine</a>)","location":{"filename":"src/wasmer/store.cr","line_number":14,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/store.cr#L14"},"def":{"name":"new","args":[{"name":"engine","external_name":"engine","restriction":"Engine"}],"visibility":"Public","body":"_ = allocate\n_.initialize(engine)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"wasmer/Wasmer/Table","path":"Wasmer/Table.html","kind":"class","full_name":"Wasmer::Table","name":"Table","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/table.cr","line_number":57,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L57"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExtern","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"A Table instance is the runtime representation of a table. It holds\na vector of function elements and an optional maximum size, if one\nwas specified in the table type at the table’s definition site.\n\nA table created by the host or in WebAssembly code will be\naccessible and mutable from both host and WebAssembly.\n\nSee also\n\nSpecification: https://webassembly.github.io/spec/core/exec/runtime.html#table-instances","summary":"<p>A Table instance is the runtime representation of a table.</p>","instance_methods":[{"html_id":"size:UInt32-instance-method","name":"size","doc":"Returns the Table's size\n\n```\ntable = instance.table(\"exported_table\").not_nil!\nsize = table.size\n```","summary":"<p>Returns the Table's size</p>","abstract":false,"location":{"filename":"src/wasmer/table.cr","line_number":69,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L69"},"def":{"name":"size","return_type":"UInt32","visibility":"Public","body":"LibWasmer.wasm_table_size(self)"}},{"html_id":"to_extern:Extern-instance-method","name":"to_extern","abstract":false,"location":{"filename":"src/wasmer/table.cr","line_number":73,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L73"},"def":{"name":"to_extern","return_type":"Extern","visibility":"Public","body":"p = LibWasmer.wasm_table_as_extern(self)\nExtern.new(p)\n"}},{"html_id":"to_unsafe:Pointer(Int64)-instance-method","name":"to_unsafe","abstract":false,"location":{"filename":"src/wasmer/table.cr","line_number":78,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L78"},"def":{"name":"to_unsafe","visibility":"Public","body":"@ptr"}}]},{"html_id":"wasmer/Wasmer/TableType","path":"Wasmer/TableType.html","kind":"class","full_name":"Wasmer::TableType","name":"TableType","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Wasmer/WithExternType","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/table.cr","line_number":13,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L13"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"wasmer/Wasmer/WithExternType","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"TableType classifies tables over elements of element types within a size range.\n\nSee also\n\nSpecification: https://webassembly.github.io/spec/core/syntax/types.html#table-types","summary":"<p>TableType classifies tables over elements of element types within a size range.</p>","constructors":[{"html_id":"new(vtype:ValueType,limits:Limits)-class-method","name":"new","abstract":false,"args":[{"name":"vtype","external_name":"vtype","restriction":"ValueType"},{"name":"limits","external_name":"limits","restriction":"Limits"}],"args_string":"(vtype : ValueType, limits : Limits)","args_html":"(vtype : <a href=\"../Wasmer/ValueType.html\">ValueType</a>, limits : <a href=\"../Wasmer/Limits.html\">Limits</a>)","location":{"filename":"src/wasmer/table.cr","line_number":16,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L16"},"def":{"name":"new","args":[{"name":"vtype","external_name":"vtype","restriction":"ValueType"},{"name":"limits","external_name":"limits","restriction":"Limits"}],"visibility":"Public","body":"_ = allocate\n_.initialize(vtype, limits)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"limits:Limits-instance-method","name":"limits","doc":"Returns the `Limits` of this `TableType`","summary":"<p>Returns the <code><a href=\"../Wasmer/Limits.html\">Limits</a></code> of this <code><a href=\"../Wasmer/TableType.html\">TableType</a></code></p>","abstract":false,"location":{"filename":"src/wasmer/table.cr","line_number":31,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L31"},"def":{"name":"limits","return_type":"Limits","visibility":"Public","body":"p = LibWasmer.wasm_tabletype_limits(self)\nLimits.new(p.value)\n"}},{"html_id":"to_externtype:ExternType-instance-method","name":"to_externtype","abstract":false,"location":{"filename":"src/wasmer/table.cr","line_number":36,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L36"},"def":{"name":"to_externtype","return_type":"ExternType","visibility":"Public","body":"p = LibWasmer.wasm_tabletype_as_externtype(self)\nExternType.new(p)\n"}},{"html_id":"value_type:ValueType-instance-method","name":"value_type","doc":"Returns `ValueType` for this `TableType`","summary":"<p>Returns <code><a href=\"../Wasmer/ValueType.html\">ValueType</a></code> for this <code><a href=\"../Wasmer/TableType.html\">TableType</a></code></p>","abstract":false,"location":{"filename":"src/wasmer/table.cr","line_number":25,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/table.cr#L25"},"def":{"name":"value_type","return_type":"ValueType","visibility":"Public","body":"p = LibWasmer.wasm_tabletype_element(self)\nValueType.new(p)\n"}}]},{"html_id":"wasmer/Wasmer/Target","path":"Wasmer/Target.html","kind":"class","full_name":"Wasmer::Target","name":"Target","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/target.cr","line_number":24,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L24"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Target represents a triple + CPU features pairs","summary":"<p>Target represents a triple + CPU features pairs</p>","constructors":[{"html_id":"new(triple:Triple,cpu:CpuFeatures)-class-method","name":"new","abstract":false,"args":[{"name":"triple","external_name":"triple","restriction":"Triple"},{"name":"cpu","external_name":"cpu","restriction":"CpuFeatures"}],"args_string":"(triple : Triple, cpu : CpuFeatures)","args_html":"(triple : <a href=\"../Wasmer/Triple.html\">Triple</a>, cpu : <a href=\"../Wasmer/CpuFeatures.html\">CpuFeatures</a>)","location":{"filename":"src/wasmer/target.cr","line_number":25,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L25"},"def":{"name":"new","args":[{"name":"triple","external_name":"triple","restriction":"Triple"},{"name":"cpu","external_name":"cpu","restriction":"CpuFeatures"}],"visibility":"Public","body":"_ = allocate\n_.initialize(triple, cpu)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"wasmer/Wasmer/Trace","path":"Wasmer/Trace.html","kind":"class","full_name":"Wasmer::Trace","name":"Trace","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/trap.cr","line_number":87,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L87"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Trace represents a WebAssembly trap","summary":"<p>Trace represents a WebAssembly trap</p>","instance_methods":[{"html_id":"frames:Array(Frame)-instance-method","name":"frames","abstract":false,"location":{"filename":"src/wasmer/trap.cr","line_number":88,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L88"},"def":{"name":"frames","return_type":"Array(Frame)","visibility":"Public","body":"@frames"}}],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","abstract":false,"args":[{"name":"call","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/wasmer/trap.cr","line_number":107,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L107"},"def":{"name":"method_missing","args":[{"name":"call","external_name":"call","restriction":""}],"visibility":"Public","body":"      @frames.\n{{ call }}\n\n    \n"}}]},{"html_id":"wasmer/Wasmer/Trap","path":"Wasmer/Trap.html","kind":"class","full_name":"Wasmer::Trap","name":"Trap","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/trap.cr","line_number":6,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L6"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Trap stores trace message with backtrace when an error happened.","summary":"<p>Trap stores trace message with backtrace when an error happened.</p>","constructors":[{"html_id":"new(store:Store,message:String)-class-method","name":"new","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"message","external_name":"message","restriction":"String"}],"args_string":"(store : Store, message : String)","args_html":"(store : <a href=\"../Wasmer/Store.html\">Store</a>, message : String)","location":{"filename":"src/wasmer/trap.cr","line_number":7,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L7"},"def":{"name":"new","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"message","external_name":"message","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(store, message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"message-instance-method","name":"message","doc":"Returns the message attached to the current `Trap`","summary":"<p>Returns the message attached to the current <code><a href=\"../Wasmer/Trap.html\">Trap</a></code></p>","abstract":false,"location":{"filename":"src/wasmer/trap.cr","line_number":19,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L19"},"def":{"name":"message","visibility":"Public","body":"LibWasmer.wasm_trap_message(self, out msg)\nres = (String.new(msg.data))[...msg.size]\nLibWasmer.wasm_byte_vec_delete(pointerof(msg))\nres\n"}},{"html_id":"origin:Frame?-instance-method","name":"origin","doc":"Returns the top frame of WebAssembly stack responsible for this trap.","summary":"<p>Returns the top frame of WebAssembly stack responsible for this trap.</p>","abstract":false,"location":{"filename":"src/wasmer/trap.cr","line_number":27,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L27"},"def":{"name":"origin","return_type":"Frame | ::Nil","visibility":"Public","body":"frame = LibWasmer.wasm_trap_origin(self)\nif frame\nelse\n  return nil\nend\nFrame.new(frame)\n"}},{"html_id":"trace:Trace-instance-method","name":"trace","doc":"Returns the trace of WebAssembly frames for this trap","summary":"<p>Returns the trace of WebAssembly frames for this trap</p>","abstract":false,"location":{"filename":"src/wasmer/trap.cr","line_number":34,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/trap.cr#L34"},"def":{"name":"trace","return_type":"Trace","visibility":"Public","body":"Trace.new(self)"}}]},{"html_id":"wasmer/Wasmer/TrapException","path":"Wasmer/TrapException.html","kind":"class","full_name":"Wasmer::TrapException","name":"TrapException","abstract":false,"superclass":{"html_id":"wasmer/Wasmer/WasmerError","kind":"class","full_name":"Wasmer::WasmerError","name":"WasmerError"},"ancestors":[{"html_id":"wasmer/Wasmer/WasmerError","kind":"class","full_name":"Wasmer::WasmerError","name":"WasmerError"},{"html_id":"wasmer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer.cr","line_number":8,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer.cr#L8"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"constructors":[{"html_id":"new(trap:Wasmer::Trap)-class-method","name":"new","abstract":false,"args":[{"name":"trap","external_name":"trap","restriction":"::Wasmer::Trap"}],"args_string":"(trap : Wasmer::Trap)","args_html":"(trap : <a href=\"../Wasmer/Trap.html\">Wasmer::Trap</a>)","location":{"filename":"src/wasmer.cr","line_number":11,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer.cr#L11"},"def":{"name":"new","args":[{"name":"trap","external_name":"trap","restriction":"::Wasmer::Trap"}],"visibility":"Public","body":"_ = allocate\n_.initialize(trap)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"trap:Trap-instance-method","name":"trap","abstract":false,"location":{"filename":"src/wasmer.cr","line_number":9,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer.cr#L9"},"def":{"name":"trap","return_type":"Trap","visibility":"Public","body":"@trap"}}]},{"html_id":"wasmer/Wasmer/Triple","path":"Wasmer/Triple.html","kind":"class","full_name":"Wasmer::Triple","name":"Triple","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/target.cr","line_number":35,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L35"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"class_methods":[{"html_id":"from_host-class-method","name":"from_host","doc":"Creates a new triple from the current host","summary":"<p>Creates a new triple from the current host</p>","abstract":false,"location":{"filename":"src/wasmer/target.cr","line_number":54,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L54"},"def":{"name":"from_host","visibility":"Public","body":"new(LibWasmer.wasmer_triple_new_from_host)"}}],"constructors":[{"html_id":"new(name:String)-class-method","name":"new","doc":"Creates a new triple, otherwise it returns an error\nspecifying why the provided triple isn't valid.\n```\ntriple = Wasmer::Triple.new(\"aarch64-unknown-linux-gnu\")\n```","summary":"<p>Creates a new triple, otherwise it returns an error specifying why the provided triple isn't valid.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/wasmer/target.cr","line_number":43,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/target.cr#L43"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}]},{"html_id":"wasmer/Wasmer/Types","path":"Wasmer/Types.html","kind":"alias","full_name":"Wasmer::Types","name":"Types","abstract":false,"locations":[{"filename":"src/wasmer/function.cr","line_number":65,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L65"}],"repository_name":"wasmer","program":false,"enum":false,"alias":true,"aliased":"(Float32 | Float64 | Int32 | Int64)","aliased_html":"Float32 | Float64 | Int32 | Int64","const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"}},{"html_id":"wasmer/Wasmer/UserEnv","path":"Wasmer/UserEnv.html","kind":"alias","full_name":"Wasmer::UserEnv","name":"UserEnv","abstract":false,"locations":[{"filename":"src/wasmer/function.cr","line_number":69,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/function.cr#L69"}],"repository_name":"wasmer","program":false,"enum":false,"alias":true,"aliased":"Pointer(Void)","aliased_html":"Pointer(Void)","const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"}},{"html_id":"wasmer/Wasmer/Value","path":"Wasmer/Value.html","kind":"class","full_name":"Wasmer::Value","name":"Value","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/value.cr","line_number":79,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L79"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"WebAssembly computations manipulate values of basic value types:\n* Integer (32 or 64 bit width)\n* Floating-point (32 or 64 bit width)\n* Vectors (128 bits, with 32 or 64 bit lanes)\n\nSee Also\nSpecification: https://webassembly.github.io/spec/core/exec/runtime.html#values","summary":"<p>WebAssembly computations manipulate values of basic value types: * Integer (32 or 64 bit width) * Floating-point (32 or 64 bit width) * Vectors (128 bits, with 32 or 64 bit lanes)</p>","constructors":[{"html_id":"new(val:Number,kind:ValueKind)-class-method","name":"new","abstract":false,"args":[{"name":"val","external_name":"val","restriction":"Number"},{"name":"kind","external_name":"kind","restriction":"ValueKind"}],"args_string":"(val : Number, kind : ValueKind)","args_html":"(val : Number, kind : <a href=\"../Wasmer/ValueKind.html\">ValueKind</a>)","location":{"filename":"src/wasmer/value.cr","line_number":80,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L80"},"def":{"name":"new","args":[{"name":"val","external_name":"val","restriction":"Number"},{"name":"kind","external_name":"kind","restriction":"ValueKind"}],"visibility":"Public","body":"_ = allocate\n_.initialize(val, kind)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(value:Int)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Int"}],"args_string":"(value : Int)","args_html":"(value : Int)","location":{"filename":"src/wasmer/value.cr","line_number":97,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L97"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Int"}],"visibility":"Public","body":"case value\nwhen Int64\n  new(value.to_i64, ValueKind::I64)\nelse\n  new(value.to_i, ValueKind::I32)\nend"}},{"html_id":"new(value:Float)-class-method","name":"new","abstract":false,"args":[{"name":"value","external_name":"value","restriction":"Float"}],"args_string":"(value : Float)","args_html":"(value : Float)","location":{"filename":"src/wasmer/value.cr","line_number":106,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L106"},"def":{"name":"new","args":[{"name":"value","external_name":"value","restriction":"Float"}],"visibility":"Public","body":"case value\nwhen Float64\n  new(value.to_f64, ValueKind::F64)\nelse\n  new(value.to_f32, ValueKind::F32)\nend"}}],"instance_methods":[{"html_id":"as_f:Float64-instance-method","name":"as_f","doc":"Returns the Value's value as a native Crystal Float64\nraises otherwise","summary":"<p>Returns the Value's value as a native Crystal Float64 raises otherwise</p>","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":147,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L147"},"def":{"name":"as_f","return_type":"Float64","visibility":"Public","body":"if kind == ValueKind::F64\nelse\n  raise(WasmerError.new(\"Cannot convert value to 'Float64'\"))\nend\n@value.of.f64\n"}},{"html_id":"as_f32:Float32-instance-method","name":"as_f32","doc":"Returns the Value's value as a native Crystal Float32\nraises otherwise","summary":"<p>Returns the Value's value as a native Crystal Float32 raises otherwise</p>","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":154,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L154"},"def":{"name":"as_f32","return_type":"Float32","visibility":"Public","body":"if kind == ValueKind::F32\nelse\n  raise(WasmerError.new(\"Cannot convert value to 'Float32'\"))\nend\n@value.of.f32\n"}},{"html_id":"as_i:Int32-instance-method","name":"as_i","doc":"Returns the Value's value as a native Crystal Int32\nraises otherwise","summary":"<p>Returns the Value's value as a native Crystal Int32 raises otherwise</p>","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":133,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L133"},"def":{"name":"as_i","return_type":"Int32","visibility":"Public","body":"if kind == ValueKind::I32\nelse\n  raise(WasmerError.new(\"Cannot convert value to 'Int32'\"))\nend\n@value.of.i32\n"}},{"html_id":"as_i64:Int64-instance-method","name":"as_i64","doc":"Returns the Value's value as a native Crystal Int64\nraises otherwise","summary":"<p>Returns the Value's value as a native Crystal Int64 raises otherwise</p>","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":140,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L140"},"def":{"name":"as_i64","return_type":"Int64","visibility":"Public","body":"if kind == ValueKind::I64\nelse\n  raise(WasmerError.new(\"Cannot convert value to 'Int64'\"))\nend\n@value.of.i64\n"}},{"html_id":"kind-instance-method","name":"kind","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":115,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L115"},"def":{"name":"kind","visibility":"Public","body":"ValueKind.from_value(@value.kind)"}},{"html_id":"unwrap:Number-instance-method","name":"unwrap","doc":"Returns the Value's value as a native Crystal value","summary":"<p>Returns the Value's value as a native Crystal value</p>","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":120,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L120"},"def":{"name":"unwrap","return_type":"Number","visibility":"Public","body":"case kind\nwhen .i32?\n  @value.of.i32\nwhen .i64?\n  @value.of.i64\nwhen .f32?\n  @value.of.f32\nwhen .f64?\n  @value.of.f64\nelse\n  raise(WasmerError.new(\"Unsupported value\"))\nend"}}]},{"html_id":"wasmer/Wasmer/ValueKind","path":"Wasmer/ValueKind.html","kind":"enum","full_name":"Wasmer::ValueKind","name":"ValueKind","abstract":false,"ancestors":[{"html_id":"wasmer/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"wasmer/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"wasmer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/value.cr","line_number":11,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L11"}],"repository_name":"wasmer","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"I32","name":"I32","value":"0_u8","doc":"A 32-bit integer. In WebAssembly, integers are\nsign-agnostic, i.E. this can either be signed or unsigned","summary":"<p>A 32-bit integer.</p>"},{"id":"I64","name":"I64","value":"1_u8","doc":"A 64-bit integer. In WebAssembly, integers are\nsign-agnostic, i.E. this can either be signed or unsigned","summary":"<p>A 64-bit integer.</p>"},{"id":"F32","name":"F32","value":"2_u8","doc":"A 32-bit float","summary":"<p>A 32-bit float</p>"},{"id":"F64","name":"F64","value":"3_u8","doc":"A 64-bit float","summary":"<p>A 64-bit float</p>"},{"id":"AnyRef","name":"AnyRef","value":"128_u8","doc":"An externref value which can hold opaque data to the WebAssembly instance itself.","summary":"<p>An externref value which can hold opaque data to the WebAssembly instance itself.</p>"},{"id":"FuncRef","name":"FuncRef","value":"129_u8","doc":"A first-class reference to a WebAssembly function","summary":"<p>A first-class reference to a WebAssembly function</p>"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"Represents the kind of a value","summary":"<p>Represents the kind of a value</p>","instance_methods":[{"html_id":"any_ref?-instance-method","name":"any_ref?","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":27,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L27"},"def":{"name":"any_ref?","visibility":"Public","body":"self == AnyRef"}},{"html_id":"f32?-instance-method","name":"f32?","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":21,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L21"},"def":{"name":"f32?","visibility":"Public","body":"self == F32"}},{"html_id":"f64?-instance-method","name":"f64?","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":24,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L24"},"def":{"name":"f64?","visibility":"Public","body":"self == F64"}},{"html_id":"func_ref?-instance-method","name":"func_ref?","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":30,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L30"},"def":{"name":"func_ref?","visibility":"Public","body":"self == FuncRef"}},{"html_id":"i32?-instance-method","name":"i32?","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":14,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L14"},"def":{"name":"i32?","visibility":"Public","body":"self == I32"}},{"html_id":"i64?-instance-method","name":"i64?","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":18,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L18"},"def":{"name":"i64?","visibility":"Public","body":"self == I64"}},{"html_id":"number?-instance-method","name":"number?","doc":"Returns true if the ValueKind is a number type","summary":"<p>Returns true if the ValueKind is a number type</p>","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":33,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L33"},"def":{"name":"number?","visibility":"Public","body":"self.value < FuncRef.value"}},{"html_id":"reference?-instance-method","name":"reference?","doc":"Returns true if the ValueKind is a reference","summary":"<p>Returns true if the ValueKind is a reference</p>","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":38,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L38"},"def":{"name":"reference?","visibility":"Public","body":"self.value >= FuncRef.value"}},{"html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a `String` representation of this enum member to the given *io*.\n\nSee also: `to_s`.","summary":"<p>Appends a <code>String</code> representation of this enum member to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/wasmer/value.cr","line_number":42,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L42"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"visibility":"Public","body":"io << self.to_s.downcase"}}]},{"html_id":"wasmer/Wasmer/ValueType","path":"Wasmer/ValueType.html","kind":"class","full_name":"Wasmer::ValueType","name":"ValueType","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/value.cr","line_number":54,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L54"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"doc":"ValueType classifies the individual values that WebAssembly code\ncan compute with and the values that a variable accepts.","summary":"<p>ValueType classifies the individual values that WebAssembly code can compute with and the values that a variable accepts.</p>","constructors":[{"html_id":"new(kind:ValueKind)-class-method","name":"new","abstract":false,"args":[{"name":"kind","external_name":"kind","restriction":"ValueKind"}],"args_string":"(kind : ValueKind)","args_html":"(kind : <a href=\"../Wasmer/ValueKind.html\">ValueKind</a>)","location":{"filename":"src/wasmer/value.cr","line_number":55,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L55"},"def":{"name":"new","args":[{"name":"kind","external_name":"kind","restriction":"ValueKind"}],"visibility":"Public","body":"_ = allocate\n_.initialize(kind)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(ptr:LibWasmer::WasmValtypeT)-class-method","name":"new","abstract":false,"args":[{"name":"ptr","external_name":"ptr","restriction":"LibWasmer::WasmValtypeT"}],"args_string":"(ptr : LibWasmer::WasmValtypeT)","args_html":"(ptr : LibWasmer::WasmValtypeT)","location":{"filename":"src/wasmer/value.cr","line_number":59,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L59"},"def":{"name":"new","args":[{"name":"ptr","external_name":"ptr","restriction":"LibWasmer::WasmValtypeT"}],"visibility":"Public","body":"_ = allocate\n_.initialize(ptr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"kind:ValueKind-instance-method","name":"kind","abstract":false,"location":{"filename":"src/wasmer/value.cr","line_number":62,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/value.cr#L62"},"def":{"name":"kind","return_type":"ValueKind","visibility":"Public","body":"ValueKind.from_value(LibWasmer.wasm_valtype_kind(self))"}}]},{"html_id":"wasmer/Wasmer/Wasi","path":"Wasmer/Wasi.html","kind":"module","full_name":"Wasmer::Wasi","name":"Wasi","abstract":false,"locations":[{"filename":"src/wasmer/wasi.cr","line_number":6,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L6"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"class_methods":[{"html_id":"version(mod:Module)-class-method","name":"version","doc":"Returns the WASI version of the given Module if any","summary":"<p>Returns the WASI version of the given Module if any</p>","abstract":false,"args":[{"name":"mod","external_name":"mod","restriction":"Module"}],"args_string":"(mod : Module)","args_html":"(mod : <a href=\"../Wasmer/Module.html\">Module</a>)","location":{"filename":"src/wasmer/wasi.cr","line_number":183,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L183"},"def":{"name":"version","args":[{"name":"mod","external_name":"mod","restriction":"Module"}],"visibility":"Public","body":"Version.from_value((LibWasmer.wasi_get_wasi_version(mod)).value)"}}],"types":[{"html_id":"wasmer/Wasmer/Wasi/Environment","path":"Wasmer/Wasi/Environment.html","kind":"class","full_name":"Wasmer::Wasi::Environment","name":"Environment","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/wasi.cr","line_number":112,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L112"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer/Wasi","kind":"module","full_name":"Wasmer::Wasi","name":"Wasi"},"doc":"`Environment` represents the environment provided to the WASI","summary":"<p><code><a href=\"../../Wasmer/Wasi/Environment.html\">Environment</a></code> represents the environment provided to the WASI</p>","instance_methods":[{"html_id":"generate_import_object(store:Store,mod:Module):ImportObject-instance-method","name":"generate_import_object","doc":"Generates an import object, that can be extended and passed to `Instance`","summary":"<p>Generates an import object, that can be extended and passed to <code><a href=\"../../Wasmer/Instance.html\">Instance</a></code></p>","abstract":false,"args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"mod","external_name":"mod","restriction":"Module"}],"args_string":"(store : Store, mod : Module) : ImportObject","args_html":"(store : <a href=\"../../Wasmer/Store.html\">Store</a>, mod : <a href=\"../../Wasmer/Module.html\">Module</a>) : <a href=\"../../Wasmer/ImportObject.html\">ImportObject</a>","location":{"filename":"src/wasmer/wasi.cr","line_number":132,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L132"},"def":{"name":"generate_import_object","args":[{"name":"store","external_name":"store","restriction":"Store"},{"name":"mod","external_name":"mod","restriction":"Module"}],"return_type":"ImportObject","visibility":"Public","body":"LibWasmer.wasmer_named_extern_vec_new_empty(out wasi_named_externs)\nret = LibWasmer.wasi_get_unordered_imports(store, mod, self, pointerof(wasi_named_externs))\nif ret\nelse\n  Wasmer.check_error\nend\nres = ImportObject.new\nfirst_ptr = wasi_named_externs.data\nsize = wasi_named_externs.size.to_i\n0.upto(size - 1) do |i|\n  curr = first_ptr[i]\n  mod_name = name_to_s(LibWasmer.wasmer_named_extern_module(curr))\n  name = name_to_s(LibWasmer.wasmer_named_extern_name(curr))\n  extern = Extern.new(LibWasmer.wasm_extern_copy(LibWasmer.wasmer_named_extern_unwrap(curr)))\n  if res.externs.has_key?(mod_name)\n  else\n    res.externs[mod_name] = Hash(String, WithExtern).new\n  end\n  res.externs[mod_name][name] = extern\nend\nLibWasmer.wasmer_named_extern_vec_delete(pointerof(wasi_named_externs))\nres\n"}},{"html_id":"read_stderr:Bytes-instance-method","name":"read_stderr","doc":"Reads the WASI module STDERR if captured with `WasiStateBuilder#with_capture_stderr`","summary":"<p>Reads the WASI module STDERR if captured with <code>WasiStateBuilder#with_capture_stderr</code></p>","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":127,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L127"},"def":{"name":"read_stderr","return_type":"Bytes","visibility":"Public","body":"read(->LibWasmer.wasi_env_read_stderr)"}},{"html_id":"read_stdout:Bytes-instance-method","name":"read_stdout","doc":"Reads the WASI module STDOUT if captured with `WasiStateBuilder#with_capture_stdout`","summary":"<p>Reads the WASI module STDOUT if captured with <code>WasiStateBuilder#with_capture_stdout</code></p>","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":122,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L122"},"def":{"name":"read_stdout","return_type":"Bytes","visibility":"Public","body":"read(->LibWasmer.wasi_env_read_stdout)"}}]},{"html_id":"wasmer/Wasmer/Wasi/StateBuilder","path":"Wasmer/Wasi/StateBuilder.html","kind":"class","full_name":"Wasmer::Wasi::StateBuilder","name":"StateBuilder","abstract":false,"superclass":{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/wasi.cr","line_number":34,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L34"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"wasmer/Wasmer/Wasi","kind":"module","full_name":"Wasmer::Wasi","name":"Wasi"},"doc":"Convenient API for configuring WASI","summary":"<p>Convenient API for configuring WASI</p>","class_methods":[{"html_id":"builder(program_name:String,&):Environment-class-method","name":"builder","abstract":false,"args":[{"name":"program_name","external_name":"program_name","restriction":"String"}],"args_string":"(program_name : String, &) : Environment","args_html":"(program_name : String, &) : <a href=\"../../Wasmer/Wasi/Environment.html\">Environment</a>","location":{"filename":"src/wasmer/wasi.cr","line_number":39,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L39"},"def":{"name":"builder","args":[{"name":"program_name","external_name":"program_name","restriction":"String"}],"yields":1,"return_type":"Environment","visibility":"Public","body":"wasi = new(program_name)\nwith wasi yield wasi\nwasi.build\n"}}],"instance_methods":[{"html_id":"build-instance-method","name":"build","doc":"Builds the state builder to produce a `WasiEnvironment`. It consumes the current `WasiStateBuilder`","summary":"<p>Builds the state builder to produce a <code>WasiEnvironment</code>.</p>","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":101,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L101"},"def":{"name":"build","visibility":"Public","body":"Environment.new(self)"}},{"html_id":"with_arg(argument:String)-instance-method","name":"with_arg","doc":"Configures a new argument to the WASI module","summary":"<p>Configures a new argument to the WASI module</p>","abstract":false,"args":[{"name":"argument","external_name":"argument","restriction":"String"}],"args_string":"(argument : String)","args_html":"(argument : String)","location":{"filename":"src/wasmer/wasi.cr","line_number":46,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L46"},"def":{"name":"with_arg","args":[{"name":"argument","external_name":"argument","restriction":"String"}],"visibility":"Public","body":"LibWasmer.wasi_config_arg(self, argument)\nself\n"}},{"html_id":"with_capture_stderr-instance-method","name":"with_capture_stderr","doc":"Configures the WASI module to capture its STDERR","summary":"<p>Configures the WASI module to capture its STDERR</p>","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":90,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L90"},"def":{"name":"with_capture_stderr","visibility":"Public","body":"LibWasmer.wasi_config_capture_stderr(self)"}},{"html_id":"with_capture_stdout-instance-method","name":"with_capture_stdout","doc":"Configures the WASI module to capture its STDOUT","summary":"<p>Configures the WASI module to capture its STDOUT</p>","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":79,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L79"},"def":{"name":"with_capture_stdout","visibility":"Public","body":"LibWasmer.wasi_config_capture_stdout(self)"}},{"html_id":"with_env(key:String,value:String)-instance-method","name":"with_env","doc":"Configures a new environment variable for the WASI module","summary":"<p>Configures a new environment variable for the WASI module</p>","abstract":false,"args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"args_string":"(key : String, value : String)","args_html":"(key : String, value : String)","location":{"filename":"src/wasmer/wasi.cr","line_number":52,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L52"},"def":{"name":"with_env","args":[{"name":"key","external_name":"key","restriction":"String"},{"name":"value","external_name":"value","restriction":"String"}],"visibility":"Public","body":"LibWasmer.wasi_config_env(self, key, value)\nself\n"}},{"html_id":"with_inherit_stderr-instance-method","name":"with_inherit_stderr","doc":"Configures the WASI module to inherit the STDERR from the host","summary":"<p>Configures the WASI module to inherit the STDERR from the host</p>","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":95,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L95"},"def":{"name":"with_inherit_stderr","visibility":"Public","body":"LibWasmer.wasi_config_inherit_stderr(self)\nself\n"}},{"html_id":"with_inherit_stdin-instance-method","name":"with_inherit_stdin","doc":"Configures the WASI module to inherit the STDIN from the host","summary":"<p>Configures the WASI module to inherit the STDIN from the host</p>","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":73,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L73"},"def":{"name":"with_inherit_stdin","visibility":"Public","body":"LibWasmer.wasi_config_inherit_stdin(self)\nself\n"}},{"html_id":"with_inherit_stdout-instance-method","name":"with_inherit_stdout","doc":"Configures the WASI module to inherit the STDOUT from the host","summary":"<p>Configures the WASI module to inherit the STDOUT from the host</p>","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":84,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L84"},"def":{"name":"with_inherit_stdout","visibility":"Public","body":"LibWasmer.wasi_config_inherit_stdout(self)\nself\n"}},{"html_id":"with_map_dir(_alias:String,dir:String)-instance-method","name":"with_map_dir","doc":"Configures a new directory to pre-open with a different name exposed to the WASI module.","summary":"<p>Configures a new directory to pre-open with a different name exposed to the WASI module.</p>","abstract":false,"args":[{"name":"_alias","external_name":"_alias","restriction":"String"},{"name":"dir","external_name":"dir","restriction":"String"}],"args_string":"(_alias : String, dir : String)","args_html":"(_alias : String, dir : String)","location":{"filename":"src/wasmer/wasi.cr","line_number":67,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L67"},"def":{"name":"with_map_dir","args":[{"name":"_alias","external_name":"_alias","restriction":"String"},{"name":"dir","external_name":"dir","restriction":"String"}],"visibility":"Public","body":"LibWasmer.wasi_config_mapdir(self, _alias, dir)\nself\n"}},{"html_id":"with_preopen_dir(dir:String)-instance-method","name":"with_preopen_dir","doc":"Configures a new directory to pre-open.\n\nThis opens the given directory at the virtual root /, and allows\nthe WASI module to read and write to the given directory.","summary":"<p>Configures a new directory to pre-open.</p>","abstract":false,"args":[{"name":"dir","external_name":"dir","restriction":"String"}],"args_string":"(dir : String)","args_html":"(dir : String)","location":{"filename":"src/wasmer/wasi.cr","line_number":61,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L61"},"def":{"name":"with_preopen_dir","args":[{"name":"dir","external_name":"dir","restriction":"String"}],"visibility":"Public","body":"LibWasmer.wasi_config_preopen_dir(self, dir)\nself\n"}}]},{"html_id":"wasmer/Wasmer/Wasi/Version","path":"Wasmer/Wasi/Version.html","kind":"enum","full_name":"Wasmer::Wasi::Version","name":"Version","abstract":false,"ancestors":[{"html_id":"wasmer/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"wasmer/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"wasmer/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer/wasi.cr","line_number":8,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L8"}],"repository_name":"wasmer","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Latest","name":"Latest","value":"0","doc":"Latest version. It's a “floating” version, i.e. it's an\nalias to the latest version. Using this version is a way to\nensure that modules will run only if they come with the\nlatest WASI version (in case of security issues for\ninstance), by just updating the runtime.","summary":"<p>Latest version.</p>"},{"id":"Snapshot0","name":"Snapshot0","value":"1","doc":"Represents the wasi unstable version","summary":"<p>Represents the wasi unstable version</p>"},{"id":"Snapshot1","name":"Snapshot1","value":"2","doc":"Represents the wasi snapshot preview1 version","summary":"<p>Represents the wasi snapshot preview1 version</p>"},{"id":"Invalid","name":"Invalid","value":"-1","doc":"Represents an invalid version","summary":"<p>Represents an invalid version</p>"}],"namespace":{"html_id":"wasmer/Wasmer/Wasi","kind":"module","full_name":"Wasmer::Wasi","name":"Wasi"},"doc":"Represents the possible WASI versions.","summary":"<p>Represents the possible WASI versions.</p>","instance_methods":[{"html_id":"invalid?-instance-method","name":"invalid?","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":21,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L21"},"def":{"name":"invalid?","visibility":"Public","body":"self == Invalid"}},{"html_id":"latest?-instance-method","name":"latest?","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":14,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L14"},"def":{"name":"latest?","visibility":"Public","body":"self == Latest"}},{"html_id":"snapshot0?-instance-method","name":"snapshot0?","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":17,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L17"},"def":{"name":"snapshot0?","visibility":"Public","body":"self == Snapshot0"}},{"html_id":"snapshot1?-instance-method","name":"snapshot1?","abstract":false,"location":{"filename":"src/wasmer/wasi.cr","line_number":19,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L19"},"def":{"name":"snapshot1?","visibility":"Public","body":"self == Snapshot1"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a `String` representation of this enum member to the given *io*.\n\nSee also: `to_s`.","summary":"<p>Appends a <code>String</code> representation of this enum member to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/wasmer/wasi.cr","line_number":23,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/wasi.cr#L23"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"io << (case self\nwhen .latest?\n  \"__latest__\"\nwhen .snapshot0?\n  \"wasi_unstable\"\nwhen .snapshot1?\n  \"wasi_snapshot_preview1\"\nwhen .invalid?\n  \"__uknown__\"\nend)"}}]}]},{"html_id":"wasmer/Wasmer/WasmerError","path":"Wasmer/WasmerError.html","kind":"class","full_name":"Wasmer::WasmerError","name":"WasmerError","abstract":false,"superclass":{"html_id":"wasmer/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"wasmer/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"wasmer/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"wasmer/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/wasmer.cr","line_number":5,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer.cr#L5"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"subclasses":[{"html_id":"wasmer/Wasmer/TrapException","kind":"class","full_name":"Wasmer::TrapException","name":"TrapException"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"}},{"html_id":"wasmer/Wasmer/WithExtern","path":"Wasmer/WithExtern.html","kind":"module","full_name":"Wasmer::WithExtern","name":"WithExtern","abstract":false,"locations":[{"filename":"src/wasmer/extern.cr","line_number":70,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L70"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"wasmer/Wasmer/Extern","kind":"class","full_name":"Wasmer::Extern","name":"Extern"},{"html_id":"wasmer/Wasmer/Function","kind":"class","full_name":"Wasmer::Function","name":"Function"},{"html_id":"wasmer/Wasmer/Global","kind":"class","full_name":"Wasmer::Global","name":"Global"},{"html_id":"wasmer/Wasmer/Memory","kind":"class","full_name":"Wasmer::Memory","name":"Memory"},{"html_id":"wasmer/Wasmer/Table","kind":"class","full_name":"Wasmer::Table","name":"Table"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"instance_methods":[{"html_id":"to_extern:Extern-instance-method","name":"to_extern","abstract":true,"location":{"filename":"src/wasmer/extern.cr","line_number":71,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L71"},"def":{"name":"to_extern","return_type":"Extern","visibility":"Public","body":""}}]},{"html_id":"wasmer/Wasmer/WithExternType","path":"Wasmer/WithExternType.html","kind":"module","full_name":"Wasmer::WithExternType","name":"WithExternType","abstract":false,"locations":[{"filename":"src/wasmer/extern.cr","line_number":16,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L16"}],"repository_name":"wasmer","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"wasmer/Wasmer/FunctionType","kind":"class","full_name":"Wasmer::FunctionType","name":"FunctionType"},{"html_id":"wasmer/Wasmer/GlobalType","kind":"class","full_name":"Wasmer::GlobalType","name":"GlobalType"},{"html_id":"wasmer/Wasmer/MemoryType","kind":"class","full_name":"Wasmer::MemoryType","name":"MemoryType"},{"html_id":"wasmer/Wasmer/TableType","kind":"class","full_name":"Wasmer::TableType","name":"TableType"}],"namespace":{"html_id":"wasmer/Wasmer","kind":"module","full_name":"Wasmer","name":"Wasmer"},"instance_methods":[{"html_id":"to_externtype:ExternType-instance-method","name":"to_externtype","abstract":true,"location":{"filename":"src/wasmer/extern.cr","line_number":17,"url":"https://github.com/naqvis/wasmer-crystal/blob/cc87bbe7f8235c0fbe831e39b65b976f80a06ce3/src/wasmer/extern.cr#L17"},"def":{"name":"to_externtype","return_type":"ExternType","visibility":"Public","body":""}}]}]}]}}